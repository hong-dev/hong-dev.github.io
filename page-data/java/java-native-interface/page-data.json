{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/java-native-interface/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"87b77b30-cb59-5604-b3ad-98899ca318f8","excerpt":"JNI JVM에서 돌아가는 bytecode와 native code 사이의 bridge Application이 완전히 java로 쓰여질 수 있지만, java 하나로는 application 요구사항을 충족시키지 못하는 경우가 있다. 이렇게 application이 java만으로 작성되지 못하는 경우, JNI을 사용하여 Java native methods를 작성한다. VM을 제공하는 곳에서 각각 다른 native method interfaces를 제공했고, 개발자들은 platform…","html":"<h1 id=\"jni\" style=\"position:relative;\"><a href=\"#jni\" aria-label=\"jni permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JNI</h1>\n<ul>\n<li>JVM에서 돌아가는 bytecode와 native code 사이의 bridge</li>\n<li>Application이 완전히 java로 쓰여질 수 있지만, java 하나로는 application 요구사항을 충족시키지 못하는 경우가 있다. 이렇게 application이 java만으로 작성되지 못하는 경우, JNI을 사용하여 <strong>Java native methods</strong>를 작성한다.</li>\n<li>VM을 제공하는 곳에서 각각 다른 native method interfaces를 제공했고, 개발자들은 platform에 따라 다양한 버전의 native method library를 만들어야 했다. 이에 통일된 표준 interface가 필요하게 되었다.</li>\n<li>Java Virtual Machine(JVM)에서 돌아가는 java code가, C, C++ 등과 같은 다른 프로그래밍 언어로 쓰여있는 library와 application 간에 상호운용할 수 있도록 해준다.</li>\n<li>\n<p>JNI의 가장 중요한 장점은, 기본 JVM의 구현에 제한을 가하지 않는다는 것이다.</p>\n<p>따라서 JVM에서는 다른 부분에 영향을 주지 않고 JNI에 대한 support를 추가할 수 있다.</p>\n</li>\n</ul>\n<br>\n<h1 id=\"pros\" style=\"position:relative;\"><a href=\"#pros\" aria-label=\"pros permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pros</h1>\n<ul>\n<li>VM 제공자들은 더 많은 native code를 제공할 수 있다.</li>\n<li>Tool 개발자들은 여러 개의 native method interfaces를 관리할 필요가 없다.</li>\n<li>Application 개발자들은 native code를 하나의 버전만 작성하면 되고, 그 버전은 다양한 VM에서 동작한다.</li>\n</ul>\n<br>\n<h1 id=\"동작원리\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC\" aria-label=\"동작원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작원리</h1>\n<ul>\n<li>JNI은 JVM 안에 들어있다.</li>\n<li>Java bytecode를 JVM이 읽을 때, native call을 수행하는 java code가 있으면 JNI을 통해서 해당 java code와 native library에서 일치하는 native function을 mapping 한다.</li>\n<li>JNI이 중간에서 동작함으로써, Java 모듈과 C/C++ 모듈이 상호 작용하며 서로 호출할 수 있다.</li>\n</ul>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/intro.html\"><em>Oracle Java SE Documentation</em></a><br>\n<a href=\"https://jung-max.github.io/2019/09/16/Android-JNI-%EB%8F%99%EC%9E%91%EA%B5%AC%EC%A1%B0/\"><em>JNI 동작 구조</em></a></p>\n</blockquote>","frontmatter":{"title":"JNI (Java Native Interface)","date":"March 12, 2022","category":"java","thumbnail":null}}},"pageContext":{"slug":"/java/java-native-interface/","previous":{"fields":{"slug":"/java/anonymous-class/"},"frontmatter":{"title":"Inner Class, Anonymous Class","category":"java","draft":false}},"next":{"fields":{"slug":"/java/generics/"},"frontmatter":{"title":"Generics in Java","category":"java","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/reflection/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"12f2ae8a-6cdf-5f70-910f-d89ed65049c1","excerpt":"Reflection Runtime에 methods, classes, interfaces의 동작을 검사하거나 수정하는 데 사용되는 API New object를 instance화 하거나 method를 호출하고 field 값을 get/set 할 수도 있다. 필요한 class는  package에서 제공된다. Class, method, field information을 access 하려면,  method를 호출한다.  method는 runtime class represetaion을 return…","html":"<h1 id=\"reflection\" style=\"position:relative;\"><a href=\"#reflection\" aria-label=\"reflection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reflection</h1>\n<ul>\n<li>Runtime에 methods, classes, interfaces의 동작을 검사하거나 수정하는 데 사용되는 API</li>\n<li>New object를 instance화 하거나 method를 호출하고 field 값을 get/set 할 수도 있다.</li>\n<li>필요한 class는 <code class=\"language-text\">java.lang.reflect</code> package에서 제공된다.</li>\n<li>\n<p>Class, method, field information을 access 하려면, <code class=\"language-text\">getClass</code> method를 호출한다.</p>\n<p><code class=\"language-text\">getClass</code> method는 runtime class represetaion을 return 한다.</p>\n</li>\n</ul>\n<br>\n<h1 id=\"methods\" style=\"position:relative;\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h1>\n<ul>\n<li><code class=\"language-text\">getClass()</code>: object가 속한 class의 이름을 가져오는 데 사용된다.</li>\n<li><code class=\"language-text\">getConstructors()</code>: object가 속한 class의 public constructors를 가져오는 데 사용된다.</li>\n<li><code class=\"language-text\">getMethod()</code>: object가 속한 class의 public methods를 가져오는 데 사용된다.</li>\n</ul>\n<br>\n<h1 id=\"pros-and-cons\" style=\"position:relative;\"><a href=\"#pros-and-cons\" aria-label=\"pros and cons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pros and Cons</h1>\n<ul>\n<li>Extensibility objects의 instance를 생성해서 외부의 user-defined classes를 사용할 수 있다.</li>\n<li>Debuggers는 reflection 속성을 사용하여, class의 private members를 검사한다.</li>\n<li>Reflective operations는 성능이 느리므로, performance-sensitive한 프로그램에서 자주 호출되는 부분에서는 사용을 피해야 한다.</li>\n<li>Abstractions를 깨뜨리므로, platform upgrade에 따라 동작이 변경될 수 있다.</li>\n</ul>\n<br>\n<h1 id=\"example-code\" style=\"position:relative;\"><a href=\"#example-code\" aria-label=\"example code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example code</h1>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Method는 없고 name, age field만 있는 Person class</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Reflection을 사용하여 class의 모든 field 이름 검색</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">givenObject_whenGetsFieldNamesAtRuntime_thent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Object</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fields <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://www.baeldung.com/java-reflection\"><em>Guide to Java Reflection</em></a><br>\n<a href=\"https://www.geeksforgeeks.org/reflection-in-java/\"><em>Reflection in Java</em></a></p>\n</blockquote>","frontmatter":{"title":"Reflection in Java","date":"January 31, 2022","category":"java","thumbnail":null}}},"pageContext":{"slug":"/java/reflection/","previous":{"fields":{"slug":"/java/builder-pattern/"},"frontmatter":{"title":"Builder Pattern","category":"java","draft":false}},"next":{"fields":{"slug":"/android/intent/"},"frontmatter":{"title":"Android Intent (Explicit & Implicit)","category":"android","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/collection-framework/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d6860995-216a-5bf6-95ac-76c4d3a06dde","excerpt":"Collection Framework 데이터를 저장하는 자료 구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 구현해 놓은 것 Collection Framework는 java의 interface를 사용하여 구현된다. Collection Interface Collection을 표현하기 위한 abstract data type을 제공한다. : Framework의 Root Interface List Interface List와 Set interface는 모두 Collection interface…","html":"<h1 id=\"collection-framework\" style=\"position:relative;\"><a href=\"#collection-framework\" aria-label=\"collection framework permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection Framework</h1>\n<ul>\n<li>데이터를 저장하는 <strong>자료 구조</strong>와 데이터를 처리하는 <strong>알고리즘</strong>을 구조화하여 클래스로 구현해 놓은 것</li>\n<li>Collection Framework는 java의 <strong>interface</strong>를 사용하여 구현된다.</li>\n</ul>\n<br>\n<h1 id=\"collection-interface\" style=\"position:relative;\"><a href=\"#collection-interface\" aria-label=\"collection interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection Interface</h1>\n<ul>\n<li>Collection을 표현하기 위한 abstract data type을 제공한다.</li>\n<li><code class=\"language-text\">java.util.Collection</code>: Framework의 Root Interface</li>\n</ul>\n<h2 id=\"list-interface\" style=\"position:relative;\"><a href=\"#list-interface\" aria-label=\"list interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Interface</h2>\n<ul>\n<li>\n<p>List와 Set interface는 모두 Collection interface를 상속받는다.</p>\n<p>따라서 List와 Set interface의 공통된 부분을 Collection interface에서 정의하고 있다.</p>\n</li>\n<li><strong>순서가 있는</strong> 데이터의 집합</li>\n<li>데이터의 <strong>중복 허용</strong></li>\n<li><em>구현 Class:</em> Vector, ArrayList, LinkedList, Stack, Queue</li>\n</ul>\n<h2 id=\"set-interface\" style=\"position:relative;\"><a href=\"#set-interface\" aria-label=\"set interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set Interface</h2>\n<ul>\n<li>List interface와 마찬가지로 Collection interface를 상속받는다.</li>\n<li><strong>순서가 없는</strong> 데이터의 집합</li>\n<li>데이터의 <strong>중복을 허용하지 않는다.</strong></li>\n<li><em>구현 Class:</em> HashSet, TreeSet</li>\n</ul>\n<h2 id=\"map-interface\" style=\"position:relative;\"><a href=\"#map-interface\" aria-label=\"map interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map Interface</h2>\n<ul>\n<li>Collection interface를 직접 확장한 것은 아니지만, Map도 Collection Framework에 포함되는 것으로 간주된다.</li>\n<li><strong>Key-Value</strong>의 한 쌍으로 이루어지는 데이터의 집합</li>\n<li><strong>순서가 없다.</strong></li>\n<li><strong>Key는 중복을 허용하지 않지만, Value는 중복될 수 있다.</strong></li>\n<li><em>구현 Class:</em> HashMap, TreeMap, Hashtable, Properties</li>\n</ul>\n<br>\n<h1 id=\"collection-class\" style=\"position:relative;\"><a href=\"#collection-class\" aria-label=\"collection class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection Class</h1>\n<ul>\n<li>Collection Frame에 속하는 Interface를 구현한 class (각 interface의 <em>구현 Class</em> 부분 참조)</li>\n<li>Vector나 Hashtable과 같은 예전 collection class보다는 새로 추가된 ArrayList나 HashMap class를 사용하는 것이 성능 면에서도 더 나은 결과를 얻을 수 있다.</li>\n</ul>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"http://www.tcpschool.com/java/java_collectionFramework_concept\"><em>컬렉션 프레임워크의 개념</em></a><br>\n<a href=\"https://www.educative.io/blog/what-are-java-collections\"><em>What are Java Collections? Get started with the framework</em></a></p>\n</blockquote>","frontmatter":{"title":"Java Collection Framework","date":"January 11, 2022","category":"java","thumbnail":null}}},"pageContext":{"slug":"/java/collection-framework/","previous":{"fields":{"slug":"/leetcode/two-sum/"},"frontmatter":{"title":"[Array] #1 Two Sum","category":"leetcode","draft":false}},"next":{"fields":{"slug":"/java/string/"},"frontmatter":{"title":"String vs StringBuilder vs StringBuffer","category":"java","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
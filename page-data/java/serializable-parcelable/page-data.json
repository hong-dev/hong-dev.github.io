{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/serializable-parcelable/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d84630f1-1f3b-5e23-a35e-9367df91e9ad","excerpt":"Object를 serializing 하는 것은 object의 상태를 byte stream으로 변환하는 것을 의미하고, deserializing은 byte stream을 object의 copy로 되돌리는 것을 의미한다. Data를 하나의 Activity에서 다른 Activity로 전달해야 하는 경우가 있는데, 이 때 data는 Intent object에 담겨서 전달된다. 복잡한 POJO(Plain Old Java Object)를 이동시킬 때에도 object…","html":"<ul>\n<li>Object를 serializing 하는 것은 object의 상태를 byte stream으로 변환하는 것을 의미하고, deserializing은 byte stream을 object의 copy로 되돌리는 것을 의미한다.</li>\n<li>Data를 하나의 Activity에서 다른 Activity로 전달해야 하는 경우가 있는데, 이 때 data는 <strong>Intent</strong> object에 담겨서 전달된다. 복잡한 POJO(Plain Old Java Object)를 이동시킬 때에도 object가 전달 가능하도록 만들어야 한다. 이러한 경우에, object는 <strong>Serializable</strong> 이거나 <strong>Parcelable</strong> 이어야 한다.</li>\n</ul>\n<br>\n<br>\n<h1 id=\"serializable\" style=\"position:relative;\"><a href=\"#serializable\" aria-label=\"serializable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Serializable</h1>\n<ul>\n<li>Standard Java interface이다. Android SDK의 일부가 아니다.</li>\n<li>Java의 automatic serialization process에 의존한다.<br>\n만약 custom serialization behavior를 원한다면, <code class=\"language-text\">writeOjbect()</code>와 <code class=\"language-text\">readObject()</code> methods를 사용해야 한다.</li>\n</ul>\n<h2 id=\"pros\" style=\"position:relative;\"><a href=\"#pros\" aria-label=\"pros permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pros</h2>\n<ul>\n<li>구현이 간단하다.<br>\n이 interface를 구현하기만 하면, POJO가 한 Activity에서 다른 Activity로 이동할 준비가 된다.</li>\n<li>Marker interface이므로 다른 extra methods를 구현할 필요가 없다.</li>\n</ul>\n<h2 id=\"cons\" style=\"position:relative;\"><a href=\"#cons\" aria-label=\"cons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cons</h2>\n<ul>\n<li>Process 중에 reflection이 사용된다.</li>\n<li>많은 추가적인 임시 objects가 생성되므로, 상당한 양의 garbage collection을 만든다.</li>\n<li>Poor performance, battery drain</li>\n</ul>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h1 id=\"parcelable\" style=\"position:relative;\"><a href=\"#parcelable\" aria-label=\"parcelable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parcelable</h1>\n<ul>\n<li>Serializable과 다르게, Android SDK의 일부이다.</li>\n<li>Automatic serialization process가 아닌, custom code를 직접 구현한다.</li>\n</ul>\n<h2 id=\"pros-1\" style=\"position:relative;\"><a href=\"#pros-1\" aria-label=\"pros 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pros</h2>\n<ul>\n<li>No reflection</li>\n<li>No garbage collection</li>\n<li>(automatic) Serializable보다 빠르다.</li>\n</ul>\n<h2 id=\"cons-1\" style=\"position:relative;\"><a href=\"#cons-1\" aria-label=\"cons 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cons</h2>\n<ul>\n<li>간단하게 구현할 수 있는 serializable에 비해 구현에 더 많은 시간이 걸린다.</li>\n<li>Boilerplate code 때문에, POJO를 유지하고 이해하는 것이 훨씬 더 어렵다.</li>\n<li>Object를 파일에 저장하도록 만들어지지 않았으므로, object를 파일에 저장하려면 Serializable을 사용해야 한다.</li>\n<li>custom Serializable보다 느리다.</li>\n</ul>\n<h2 id=\"example-1\" style=\"position:relative;\"><a href=\"#example-1\" aria-label=\"example 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyParcelable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Parcelable</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> mData<span class=\"token punctuation\">;</span>\n\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">describeContents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeToParcel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parcel</span> out<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> flags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         out<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span>mData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Parcelable<span class=\"token punctuation\">.</span>Creator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">></span></span> CREATOR\n             <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Parcelable<span class=\"token punctuation\">.</span>Creator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">public</span> <span class=\"token class-name\">MyParcelable</span> <span class=\"token function\">createFromParcel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parcel</span> in<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n\n         <span class=\"token keyword\">public</span> <span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">newArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token keyword\">private</span> <span class=\"token class-name\">MyParcelable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parcel</span> in<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         mData <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://medium.com/android-news/parcelable-vs-serializable-6a2556d51538\"><em>Parcelable vs Serializable</em></a><br>\n<a href=\"https://proandroiddev.com/serializable-or-parcelable-why-and-which-one-17b274f3d3bb\"><em>Serializable or Parcelable? Why and Which one?</em></a><br>\n<a href=\"https://developer.android.com/reference/android/os/Parcelable#java\"><em>Parcelable</em></a></p>\n</blockquote>","frontmatter":{"title":"Serializable vs Parcelable","date":"February 18, 2022","category":"java","thumbnail":null}}},"pageContext":{"slug":"/java/serializable-parcelable/","previous":{"fields":{"slug":"/android/thread-handler-looper/"},"frontmatter":{"title":"Android Thread, Handler, Looper","category":"android","draft":false}},"next":{"fields":{"slug":"/android/context/"},"frontmatter":{"title":"Android Context: activity, application","category":"android","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
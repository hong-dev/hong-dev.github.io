{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/static-volatile/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8559c520-a5f3-5707-9a4a-ec73f9794bd9","excerpt":"Static variable 만약 2개의 threads(t1, t2)가 같은 object에 접근해서 static으로 선언된 변수를 update 한다고 하자. 이때 t1과 t2는 static 변수들을 포함하여 해당 object에 대한 local copy를 각자의 cache에 저장한다. 따라서 t1의 local cache에서 static 변수를 변경하면, t2 cache의 static 변수에는 반영되지 않는다. 한 object의 변경이, 같은 class의 다른 objects에 적용되는 context…","html":"<h1 id=\"static-variable\" style=\"position:relative;\"><a href=\"#static-variable\" aria-label=\"static variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static variable</h1>\n<ul>\n<li>\n<p>만약 2개의 threads(t1, t2)가 같은 object에 접근해서 <strong>static</strong>으로 선언된 변수를 update 한다고 하자.</p>\n<p>이때 t1과 t2는 <strong>static 변수들을 포함하여</strong> 해당 object에 대한 local copy를 각자의 cache에 저장한다.</p>\n<p>따라서 t1의 local cache에서 static 변수를 변경하면, t2 cache의 static 변수에는 반영되지 않는다.</p>\n</li>\n<li>\n<p>한 object의 변경이, 같은 class의 다른 objects에 적용되는 <strong>context of Object</strong>에서 사용된다.</p>\n<p>그러나, 한 thread의 static 변수 변경이 즉시 다른 threads에도 적용되는 <strong>context of Thread</strong>에서는 <strong>사용되지 않는다.</strong></p>\n</li>\n</ul>\n<br>\n<h1 id=\"volatile-variable\" style=\"position:relative;\"><a href=\"#volatile-variable\" aria-label=\"volatile variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Volatile variable</h1>\n<ul>\n<li>\n<p>만약 2개의 threads(t1, t2)가 같은 object에 접근해서 <strong>volatile</strong>로 선언된 변수를 update 한다고 하자.</p>\n<p>이때 t1과 t2는 <strong>volatile 변수들은 제외하고</strong> 해당 object에 대한 각자의 local cache를 만든다.</p>\n</li>\n<li>Volatile 변수는 오직 하나의 shared main copy만 가지게 된다.</li>\n<li>Volatile 변수는 다양한 threads에 의해 변경되고, 하나의 thread에서 volatile 변수를 변경하면 즉시 다른 threads에도 반영된다.</li>\n<li>Volatile 변수는 CPU의 cache를 거치지 않고 main memory에 직접 read/write를 수행</li>\n<li>주로 여러 threads가 동시에 접근할 수 있는 변수를 volatile로 선언</li>\n</ul>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://newbedev.com/volatile-vs-static-in-java\"><em>Volatile vs Static in Java</em></a></p>\n</blockquote>","frontmatter":{"title":"Static vs Volatile variables","date":"January 08, 2022","category":"java","thumbnail":null}}},"pageContext":{"slug":"/java/static-volatile/","previous":{"fields":{"slug":"/android/components/"},"frontmatter":{"title":"Android Application Components","category":"android","draft":false}},"next":{"fields":{"slug":"/java/garbage-collection/"},"frontmatter":{"title":"Garbage Collection (GC)","category":"java","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
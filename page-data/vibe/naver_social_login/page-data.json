{"componentChunkName":"component---src-templates-blog-post-js","path":"/vibe/naver_social_login/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0abf2e3c-0039-5133-ab3e-2e468d68093b","excerpt":"Naver Social Login Unit test code Vibe는 기본적으로 Naver의 자회사여서 회원가입 자체가 네이버 회원가입이며, 로그인 또한 네이버를 통하는 방법으로 진행하고 개별 회원가입과 로그인은 따로 없다. 네이버 소셜로그인을 진행하기 위해, 네이버 개발자센터에서 앱 사용 등록을 해야한다. Social Log-in 1) 프론트에서 아이디와 비밀번호를 입력해서(body) 네이버에 요청(request)을 보내면, 네이버에서 네이버 계정이 맞다는 token을 보내준다.…","html":"<h4 id=\"naver-social-login-unit-test-code\" style=\"position:relative;\"><a href=\"#naver-social-login-unit-test-code\" aria-label=\"naver social login unit test code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://hong-dev.github.io/posts/project_vibe/unittest/naver_social_login\">Naver Social Login Unit test code</a></h4>\n<p>Vibe는 기본적으로 Naver의 자회사여서 회원가입 자체가 네이버 회원가입이며, 로그인 또한 네이버를 통하는 방법으로 진행하고 개별 회원가입과 로그인은 따로 없다.</p>\n<p>네이버 소셜로그인을 진행하기 위해, 네이버 개발자센터에서 앱 사용 등록을 해야한다.</p>\n<h3 id=\"social-log-in\" style=\"position:relative;\"><a href=\"#social-log-in\" aria-label=\"social log in permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Social Log-in</h3>\n<p><strong>1)</strong> 프론트에서 아이디와 비밀번호를 입력해서(body) 네이버에 요청(request)을 보내면, 네이버에서 네이버 계정이 맞다는 token을 보내준다.</p>\n<p><strong>2)</strong> 프론트는 네이버에서 받은 token을 request.headers에 담아 백엔드로 전달해준다.</p>\n<p><strong>3)</strong> 백엔드는 프론트가 보내준 token을 headers에 담아 네이버로 요청을 하고, 네이버는 token을 확인한 후 회원정보를 response한다.</p>\n<h3 id=\"requests-format\" style=\"position:relative;\"><a href=\"#requests-format\" aria-label=\"requests format permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requests format</h3>\n<ul>\n<li><a href=\"https://developers.naver.com/docs/login/profile/\">네이버 개발자센터 (Naver Developers)</a>에서 회원 프로필을 가져올 수 있는 방법이 자세하게 적혀있다.</li>\n<li>Bearer, url 등 네이버에 requests를 보낼 때의 format은 네이버 개발자 센터에서 요청한대로 적어주면 된다.</li>\n</ul>\n<h3 id=\"timeout\" style=\"position:relative;\"><a href=\"#timeout\" aria-label=\"timeout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Timeout</h3>\n<ul>\n<li>request를 보내고 response를 받기까지 시간이 너무 오래걸릴 경우에, timeout을 사용하여 네트워크를 계속 기다리지 않고 멈출 수 있도록 설정한다.</li>\n<li>기본적으로 requests는 timeout이 설정되어 있지 않아서, return을 받지 않으면 무기한으로 기다릴 것이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># user/views.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NaverSignInView</span><span class=\"token punctuation\">(</span>View<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        naver_token <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n        header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'Authorization'</span> <span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Bearer </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>naver_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">}</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://openapi.naver.com/v1/nid/me\"</span>\n\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers <span class=\"token operator\">=</span> header<span class=\"token punctuation\">,</span> timeout <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            user_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'response'</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token keyword\">if</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>naver_id <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>naver_id <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>naver_id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> SECRET_KEY<span class=\"token punctuation\">[</span><span class=\"token string\">'secret'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> algorithm <span class=\"token operator\">=</span> <span class=\"token string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">return</span> JsonResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">,</span>\n                                     <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"nickname\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>nickname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                User<span class=\"token punctuation\">(</span>\n                    naver_id    <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    nickname    <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'nickname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    name        <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    email       <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    image       <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'profile_image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    birthday    <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'birthday'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    gender      <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>naver_id <span class=\"token operator\">=</span> user_data<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>naver_id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> SECRET_KEY<span class=\"token punctuation\">[</span><span class=\"token string\">'secret'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> algorithm <span class=\"token operator\">=</span> <span class=\"token string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">return</span> JsonResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">,</span>\n                                     <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"nickname\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>nickname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> JsonResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"INVALID_KEYS\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> status <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<p>Reference:\n<a href=\"https://stackabuse.com/the-python-requests-module/\">https://stackabuse.com/the-python-requests-module/</a></p>","frontmatter":{"title":"Naver Social Log-in","date":"March 24, 2020","category":"python","thumbnail":null}}},"pageContext":{"slug":"/vibe/naver_social_login/","previous":{"fields":{"slug":"/vibe/read_me/"},"frontmatter":{"title":"[VIBE Clone] README.md","category":"project","draft":false}},"next":{"fields":{"slug":"/vibe/social_login_unittest/"},"frontmatter":{"title":"Unit test : Naver Social Log-in","category":"django","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
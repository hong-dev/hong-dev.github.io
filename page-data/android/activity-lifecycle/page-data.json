{"componentChunkName":"component---src-templates-blog-post-js","path":"/android/activity-lifecycle/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"a35102d7-e4b4-502d-9337-d31a3064978b","excerpt":"Lifecycle Component에 대한 lifecycle 상태 정보를 가지고 있는 class이며, 다른 objects들이 이 lifecycle 상태를 관찰할 수 있도록 한다. Event: Framework나 Lifecycle class에서 전달되는 lifecycle events. Activity나 fragment의 callback events에 mapping 된다. State: Lifecycle object가 추적하는 component의 현재 상태 Activity Lifecycle…","html":"<h1 id=\"lifecycle\" style=\"position:relative;\"><a href=\"#lifecycle\" aria-label=\"lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lifecycle</h1>\n<ul>\n<li>Component에 대한 lifecycle 상태 정보를 가지고 있는 class이며, 다른 objects들이 이 lifecycle 상태를 관찰할 수 있도록 한다.</li>\n<li>\n<p><strong>Event</strong>: Framework나 Lifecycle class에서 전달되는 lifecycle events.</p>\n<p>Activity나 fragment의 callback events에 mapping 된다.</p>\n</li>\n<li><strong>State</strong>: Lifecycle object가 추적하는 component의 현재 상태</li>\n</ul>\n<br>\n<h1 id=\"activity-lifecycle\" style=\"position:relative;\"><a href=\"#activity-lifecycle\" aria-label=\"activity lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Activity Lifecycle</h1>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/148647019-aba67bc9-4bb6-4a46-afc7-5ae5b0dce169.png\" alt=\"Activity Lifecycle Graph\"></p>\n<p><a href=\"https://developer.android.com/guide/components/activities/activity-lifecycle.html#alc\"><em>A simplified illustration of the activity lifecycle</em></a></p>\n<h2 id=\"oncreate\" style=\"position:relative;\"><a href=\"#oncreate\" aria-label=\"oncreate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onCreate()</h2>\n<ul>\n<li>System이 처음 activity를 생성할 때 실행되는 callback</li>\n<li>반드시 구현해야 한다.</li>\n<li>Activity 생성 시, activity는 <code class=\"language-text\">Created</code> 상태가 된다.</li>\n<li>Activity의 전체 life 동안 한번만 발생해야 하는 startup logic을 구현한다.</li>\n<li><code class=\"language-text\">onCreate()</code> method의 실행이 완료되면, activity는 <code class=\"language-text\">Started</code> 상태가 되고 system은 <code class=\"language-text\">onStart()</code>를 호출한다.</li>\n</ul>\n<h2 id=\"onstart\" style=\"position:relative;\"><a href=\"#onstart\" aria-label=\"onstart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onStart()</h2>\n<ul>\n<li>사용자에게 activity가 보여지도록 만든다.</li>\n<li>예를 들면, app이 UI를 유지하는 코드를 초기화한다.</li>\n<li><code class=\"language-text\">onStart()</code> method는 매우 빠르게 완료된다.</li>\n<li>이 callback이 완료되면, activity는 <code class=\"language-text\">Resumed</code> 상태가 되고 system은 <code class=\"language-text\">onResume()</code>를 호출한다.</li>\n</ul>\n<h2 id=\"onresume\" style=\"position:relative;\"><a href=\"#onresume\" aria-label=\"onresume permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onResume()</h2>\n<ul>\n<li>App이 사용자와 상호작용하는 상태</li>\n<li>App에서 focus를 잃을 때까지(ex. 전화를 받거나 다른 activity로 이동하는 등) app은 이 상태를 유지한다.</li>\n<li>방해되는 event가 발생하면, activity가 <code class=\"language-text\">Paused</code> 상태가 되고, system은 <code class=\"language-text\">onPause()</code> callback을 호출한다.</li>\n<li>Activity가 <code class=\"language-text\">Paused</code> 상태에서 <code class=\"language-text\">Resumed</code> 상태로 돌아오면, system은 다시한번 <code class=\"language-text\">onResume()</code>을 호출한다.</li>\n</ul>\n<h2 id=\"onpause\" style=\"position:relative;\"><a href=\"#onpause\" aria-label=\"onpause permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onPause()</h2>\n<ul>\n<li>사용자가 activity를 떠나는 첫번째 표시로 호출된다. (항상 activity가 destroyed 되는 것은 아님)</li>\n<li>Activity가 더이상 전면(foreground)에 있지 않는다. (사용자가 multi-window 모드일 경우에는 여전히 표시될 수 있음)</li>\n<li>Activity가 <code class=\"language-text\">Paused</code> 상태인 동안 작업을 일시중지하거나 조정하기 위해 이 method를 사용한다.</li>\n</ul>\n<h2 id=\"onstop\" style=\"position:relative;\"><a href=\"#onstop\" aria-label=\"onstop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onStop()</h2>\n<ul>\n<li>Activity가 사용자에게 더이상 보이지 않게 되면, <code class=\"language-text\">Stopped</code> 상태가 되고 system은 <code class=\"language-text\">onStop()</code>을 호출한다.</li>\n<li>예를 들어, 새로 launch된 activity가 전체 화면을 덮을 때 발생할 수 있다.</li>\n<li>System은 activity가 실행을 완료하고 종료되려고 할 때 <code class=\"language-text\">onStop()</code>을 호출할 수도 있다.</li>\n<li>App이 사용자에게 표시되지 않는 동안, 필요하지 않은 resource를 release 하거나 조정해야 한다.</li>\n<li>\n<p>상대적으로 CPU를 많이 사용하는 작업을 수행하기 위해서도 <code class=\"language-text\">onStop()</code>을 사용한다.</p>\n<p>(예를 들어 database에 정보를 저장할 적절한 시간을 찾을 수 없으면, <code class=\"language-text\">onStop()</code> 중에 할 수 있다.)</p>\n</li>\n<li>\n<p><code class=\"language-text\">Stopped</code> 상태에서, activity는 사용자와 interact 하기 위해 돌아오거나 실행을 완료하고 사라진다.</p>\n<p>돌아오는 경우 system은 <code class=\"language-text\">onRestart()</code>를 호출하고, 실행이 종료되면 system은 <code class=\"language-text\">onDestroy()</code>를 호출한다.</p>\n</li>\n</ul>\n<h2 id=\"ondestroy\" style=\"position:relative;\"><a href=\"#ondestroy\" aria-label=\"ondestroy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onDestroy()</h2>\n<ul>\n<li>Activity가 소멸되기 전에 호출된다.</li>\n<li>Activity가 destroyed 되기 전에 필요한 모든 것을 정리할 수 있다.</li>\n<li>Activity가 종료된다면, <code class=\"language-text\">onDestroy()</code>는 activity가 수신하는 마지막 lifecycle callback이다.</li>\n<li>만약 configuration 변경으로 인해 <code class=\"language-text\">onDestroy()</code>가 호출된 것이라면, system은 즉시 새로운 activity instance를 만들고 새로운 configuration의 instance에서 <code class=\"language-text\">onCreate()</code>를 호출한다.</li>\n<li><code class=\"language-text\">onDestroy()</code>는 <code class=\"language-text\">onStop()</code>과 같은 이전의 callback에서 완전히 release 되지 않은 resources를 모두 release 해야 한다.</li>\n</ul>\n<h2 id=\"onrestart\" style=\"position:relative;\"><a href=\"#onrestart\" aria-label=\"onrestart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onRestart()</h2>\n<ul>\n<li><code class=\"language-text\">onStop()</code> 이후 activity가 사용자에게 다시 표시될 때 호출된다.</li>\n<li><code class=\"language-text\">onRestart()</code> 다음에는 <code class=\"language-text\">onStart()</code>와 <code class=\"language-text\">onResume()</code>이 호출된다.</li>\n</ul>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://developer.android.com/guide/components/activities/activity-lifecycle.html\"><em>The Activity Lifecycle</em></a></p>\n</blockquote>","frontmatter":{"title":"Android Activity Lifecycle","date":"January 08, 2022","category":"android","thumbnail":null}}},"pageContext":{"slug":"/android/activity-lifecycle/","previous":{"fields":{"slug":"/java/garbage-collection/"},"frontmatter":{"title":"Garbage Collection (GC)","category":"java","draft":false}},"next":{"fields":{"slug":"/leetcode/two-sum/"},"frontmatter":{"title":"[Array] #1 Two Sum","category":"leetcode","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/android/fragment/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f4c1bbb9-4f0c-5609-aea3-7b85be378936","excerpt":"Fragment App UI의 재사용 가능한 부분을 나타낸다. 자체 layout을 정의 및 관리하고, 자체 lifecycle을 가지며, 자체 input events를 처리할 수 있다. 단독으로는 존재할 수 없으며, activity 또는 다른 fragment에서 hosting 되어야 한다. Fragment의 view 계층은 host의 view 계층의 일부가 되거나 연결된다. UI를 개별 chunks로 나눔으로써 activity의 UI에 Modularity와 Reusability…","html":"<h1 id=\"fragment\" style=\"position:relative;\"><a href=\"#fragment\" aria-label=\"fragment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fragment</h1>\n<ul>\n<li>App UI의 재사용 가능한 부분을 나타낸다.</li>\n<li>자체 layout을 정의 및 관리하고, 자체 lifecycle을 가지며, 자체 input events를 처리할 수 있다.</li>\n<li>\n<p>단독으로는 존재할 수 없으며, activity 또는 다른 fragment에서 hosting 되어야 한다.</p>\n<p>Fragment의 view 계층은 host의 view 계층의 일부가 되거나 연결된다.</p>\n</li>\n<li>UI를 개별 chunks로 나눔으로써 activity의 UI에 Modularity와 Reusability가 가능하도록 한다.</li>\n</ul>\n<br>\n<h1 id=\"activity-vs-fragment\" style=\"position:relative;\"><a href=\"#activity-vs-fragment\" aria-label=\"activity vs fragment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Activity vs Fragment</h1>\n<ul>\n<li>\n<p>Activity는 user interface 주위에 navigation drawer 같은 global elements를 배치하기에 이상적인 곳이다.</p>\n<p>반대로 fragment는 단일 화면 또는 화면 일부의 UI를 정의하고 관리하는 데에 더 적합하다.</p>\n</li>\n<li>\n<p>만약에 navigation drawer와 grid list가 있을 때, screen 사이즈에 따라서 그 배치가 달라진다.</p>\n<p>이 때 이 모든 변형을 activity에서 전부 관리하는 것은 어려울 수 있다.</p>\n<p>이 역할을 분리하면, acitivity는 navigation UI를 정확히 표시하고, fragment는 적절한 layout으로 list를 표시하도록 할 수 있다.</p>\n</li>\n<li>\n<p>UI를 fragments로 나누면, runtime에 activity의 appearance를 더 쉽게 수정할 수 있다.</p>\n<p>Activity가 <code class=\"language-text\">STARTED</code> lifecycle state 또는 그 이상일 때, fragments를 추가, 교체 또는 제거할 수 있다.</p>\n</li>\n</ul>\n<br>\n<h1 id=\"lifecycle\" style=\"position:relative;\"><a href=\"#lifecycle\" aria-label=\"lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lifecycle</h1>\n<br>\n<img src=\"https://user-images.githubusercontent.com/53142539/150360751-2fdffd0d-5891-4c0d-9170-77e7c9f994a3.png\" alt=\"fragment-view-lifecycle\" width=\"500px\">\n<p><a href=\"https://developer.android.com/guide/fragments/lifecycle#states\"><em>Ref. Fragment and view lifecycle</em></a></p>\n<br>\n<ul>\n<li>각각의 fragment instance는 각자의 own lifecycle을 가진다.</li>\n<li>\n<p>Fragment가 lifecycle을 통해 진행됨에 따라, states가 위아래로 이동한다.</p>\n<p>예를 들어, back stack의 맨 위에 추가된 fragment는 <code class=\"language-text\">CREATED</code>에서 <code class=\"language-text\">STARTED</code>, <code class=\"language-text\">RESUMED</code>로 위쪽으로 이동한다.</p>\n<p>반대로, fragment가 back stack에서 튀어나오면 <code class=\"language-text\">RESUMED</code>, <code class=\"language-text\">STARTED</code>, <code class=\"language-text\">CREATED</code>, 마지막으로 <code class=\"language-text\">DESTROYED</code>까지 아래로 이동한다.</p>\n</li>\n<li>Fragment와 View의 lifecycle에는 <code class=\"language-text\">PAUSE</code>와 <code class=\"language-text\">STOP</code>에 해당하는 상태가 없다.</li>\n</ul>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://developer.android.com/guide/fragments\"><em>Fragments</em></a><br>\n<a href=\"https://developer.android.com/guide/fragments/lifecycle\"><em>Fragment lifecycle</em></a></p>\n</blockquote>","frontmatter":{"title":"Android Fragment","date":"January 21, 2022","category":"android","thumbnail":null}}},"pageContext":{"slug":"/android/fragment/","previous":{"fields":{"slug":"/java/singleton-pattern/"},"frontmatter":{"title":"Singleton Pattern","category":"java","draft":false}},"next":null}},"staticQueryHashes":["2353110810","3128451518"]}
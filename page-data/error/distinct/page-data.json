{"componentChunkName":"component---src-templates-blog-post-js","path":"/error/distinct/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"74a8fc63-8f2f-58ce-b538-5e013099af1c","excerpt":"Situation Django ORM으로, User별로 가장 최근 결제한 주문 건을 return 하고자 하였다. 그래서 결제일자를 기준으로 정렬한 후, user를 기준으로 distinct 하고자 하였다. distinct() 중복값을 제거하고 중복값들은 하나만 남겨서 return 한다. 결과는, NotSupportedError 발생 Cause MySQL에서는  기능을 사용할 수 없다. PostgresSQL에서만 해당 코드가 작동한다고 한다. MySQL…","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">django.db.utils.NotSupportedError: DISTINCT ON fields is not supported by this database backend</code></pre></div>\n<br>\n<h2 id=\"situation\" style=\"position:relative;\"><a href=\"#situation\" aria-label=\"situation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Situation</h2>\n<p>Django ORM으로, User별로 가장 최근 결제한 주문 건을 return 하고자 하였다.<br>\n그래서 결제일자를 기준으로 정렬한 후, user를 기준으로 distinct 하고자 하였다.</p>\n<blockquote>\n<h2 id=\"distinct\" style=\"position:relative;\"><a href=\"#distinct\" aria-label=\"distinct permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>distinct()</em></h2>\n<p>중복값을 제거하고 중복값들은 하나만 남겨서 return 한다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">order_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    Order\n    <span class=\"token punctuation\">.</span>objects\n    <span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-payment_date'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>distinct<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>결과는, NotSupportedError 발생</p>\n<br>\n<h2 id=\"cause\" style=\"position:relative;\"><a href=\"#cause\" aria-label=\"cause permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cause</h2>\n<p>MySQL에서는 <code class=\"language-text\">.distinct({field_name})</code> 기능을 사용할 수 없다.<br>\nPostgresSQL에서만 해당 코드가 작동한다고 한다.<br>\nMySQL에서는 <code class=\"language-text\">.distinct()</code>의 형태로만 사용할 수 있고, 특정 field를 기준으로 중복값을 제거할 수는 없다.</p>\n<br>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<p>Order table을 기준으로 user의 중복값을 없애려고 하지말고, User table을 기준으로 잡으면 user 중복을 고려하지 않아도 된다.<br>\n그러나 가장 최신의 payment date를 기준으로 뽑아내야 하므로, user table에서는 그 작업을 할 수가 없고 order table에서 <code class=\"language-text\">.latest('payment_date')</code>를 해야했다.<br>\n그래서 order table을 기준으로 하되 모든 user를 for문으로 돌려서 하나씩 가장 최신 주문을 찾았다.<br>\n<code class=\"language-text\">distinct</code> 하나면 해결되었을 것을 이렇게나 비효율적으로 querying 해야하나 싶은데..😭</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">order_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    Order\n    <span class=\"token punctuation\">.</span>objects\n    <span class=\"token punctuation\">.</span>select_related<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\nusers <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\norders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"id\"</span>           <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"user_id\"</span>      <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"user_name\"</span>    <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"user_email\"</span>   <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"order_number\"</span> <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>order_number<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"product\"</span>      <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"payment_date\"</span> <span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">.</span>payment_date\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users <span class=\"token keyword\">if</span>\n    <span class=\"token punctuation\">(</span>order <span class=\"token punctuation\">:</span><span class=\"token operator\">=</span> order_list<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>latest<span class=\"token punctuation\">(</span><span class=\"token string\">'payment_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<br>\n<blockquote>\n<p>Reference: <a href=\"https://stackoverflow.com/questions/54249017/distinct-on-fields-is-not-supported-by-this-database-backend\">DISTINCT ON fields is not supported by this database backend</a></p>\n</blockquote>","frontmatter":{"title":"NotSupportedError: DISTINCT","date":"May 15, 2020","category":"error","thumbnail":null}}},"pageContext":{"slug":"/error/distinct/","previous":{"fields":{"slug":"/algorithm/replace/"},"frontmatter":{"title":"괄호의 배열에서 쇠막대기 개수 찾기","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/algorithm/truck/"},"frontmatter":{"title":"트럭들이 모두 다리를 통과하는 데 걸리는 시간","category":"algorithm","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
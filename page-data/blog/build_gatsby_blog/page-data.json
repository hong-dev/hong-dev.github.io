{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/build_gatsby_blog/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7ef7416d-82ed-5176-a365-9ff18f4eb68b","excerpt":"개발을 시작한 후, Github Blog를 쓰기 시작했다. 처음부터 끝까지 웹사이트를 만들기에는 막막했던 터라 Gatsby starter를 활용하여 만들었다. Gatsby에서는 starter를 위한 template을 제공해주고 있어서 가져다가 조금만 수정해서 사용할 수 있다. ▶ gatsby starter template 구경하기 첫 gatsby blog는 gatsby-starter-lumen 을 활용한 블로그였다. 3달 넘게 잘 쓰고 있다가 이모티콘을 블로그에 넣어보고자 검색하다가 gatsby…","html":"<p>개발을 시작한 후, Github Blog를 쓰기 시작했다.<br>\n처음부터 끝까지 웹사이트를 만들기에는 막막했던 터라 Gatsby starter를 활용하여 만들었다.<br>\nGatsby에서는 starter를 위한 template을 제공해주고 있어서 가져다가 조금만 수정해서 사용할 수 있다.</p>\n<p>▶ <a href=\"https://www.gatsbyjs.org/starters?v=2\">gatsby starter template 구경하기</a></p>\n<br>\n<p>첫 gatsby blog는 <a href=\"https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/\">gatsby-starter-lumen</a> 을 활용한 블로그였다.<br>\n3달 넘게 잘 쓰고 있다가 이모티콘을 블로그에 넣어보고자 검색하다가 <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-emoji/\">gatsby-remark-emoji</a> 라는 것을 발견!</p>\n<p>링크에서 하라는대로 <code class=\"language-text\">yarn add</code>도 하고 <code class=\"language-text\">gatsby-config.js</code>에도 추가했는데 알 수 없는 에러창이 떴다..<br>\n급히 되돌려보고 package 삭제까지 했다.. git에 올려져있는 것을 다시 clone 받아도 봤다..<br>\n뭘해도 에러는 사라지지 않아서(리액트알못..😭), 결국은 새로운 Gatsby blog 만들기!</p>\n<br>\n<p>평소에 예쁘다고 생각한 <a href=\"https://www.gatsbyjs.org/starters/JaeYeopHan/gatsby-starter-bee/\">gatsby-starter-bee</a> 템플릿으로 도전!  </p>\n<ol>\n<li>이모티콘을 지원한다! 조마조마하며 패키지 설치하지 않아도 됨!</li>\n<li>한글 지원! (다른 탬플릿 중에는 한글이 깨지기도 한다더라) 한글로 된 readme도 있다! 갓재엽님..</li>\n<li>어떤 부분을 바꾸면 되는지 친절한 설명 + 다른 사용자들의 코드 참고 가능!</li>\n<li>반응형까지 너무 예쁘게 잘 되어있다!</li>\n</ol>\n<br>\n<h1 id=\"초기-세팅\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EA%B8%B0-%EC%84%B8%ED%8C%85\" aria-label=\"초기 세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>초기 세팅</h1>\n<p><strong>1. git 설치</strong><br>\n<strong>2. npm 설치</strong><br>\n<strong>3. yarn 설치</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g yarn</code></pre></div>\n<p><strong>4. gatsby-cli 설치</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<blockquote>\n<p>npm install시에 <code class=\"language-text\">-g</code> option은 <code class=\"language-text\">--global</code>과도 같은 의미이며, 어디에서도 사용할 수 있도록 전역에 설치하는 것을 뜻한다.</p>\n</blockquote>\n<br>\n<h1 id=\"gatsby-theme-가져오기\" style=\"position:relative;\"><a href=\"#gatsby-theme-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"gatsby theme 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby Theme 가져오기</h1>\n<p>블로그를 만들고 싶은 directory에서 아래의 명령어를 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new gatsby-starter-bee https://github.com/JaeYeopHan/gatsby-starter-bee</code></pre></div>\n<blockquote>\n<p> <code class=\"language-text\">gatsby-starter-bee</code>라는 디렉토리에 선택한 테마의 소스코드를 가져온다는 뜻이다.  </p>\n</blockquote>\n<p>명령어를 실행시 <code class=\"language-text\">gatsby-starter-bee</code>라는 디렉토리가 자동으로 생성되므로, new 다음에 원하는 디렉토리 이름을 적으면 된다.<br>\n디렉토리명 다음 부분에는 원하는 테마의 github 주소를 적는다.</p>\n<p>위의 명령어를 실행하면 package manager를 yarn으로 할 것인지 npm으로 할 것인지 선택하라고 한다.<br>\nyarn을 설치했으므로 default인 <code class=\"language-text\">yarn</code>을 선택해준다.</p>\n<br>\n<h1 id=\"로컬환경에서-블로그-띄우기\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%9D%84%EC%9A%B0%EA%B8%B0\" aria-label=\"로컬환경에서 블로그 띄우기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬환경에서 블로그 띄우기</h1>\n<p>생성된 gatsby 블로그 폴더에 들어간다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd gatsby-starter-bee</code></pre></div>\n<p>해당 폴더 안에서 로컬 서버를 띄워준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn develop</code></pre></div>\n<blockquote>\n<p>권한이 없다는 에러가 뜨면 <code class=\"language-text\">sudo yarn develop</code> 로 sudo를 붙여서 실행해본다.</p>\n</blockquote>\n<br>\n<p>서버가 실행되면, 크롬 주소창에 <code class=\"language-text\">localhost:8000</code> 을 입력한다.<br>\n선택한 테마의 기본 블로그 화면이 뜨면 성공!</p>\n<p>서버가 실행되고 있는 동안은 localhost에 접속가능하다.<br>\n코드를 바꾸고 git에 올리고 deploy(배포)까지 한 다음 확인하는 것은 비효율적이다.<br>\n바뀐 코드가 적용되는 것을 바로바로 볼 수 있도록 서버를 계속 실행하면서 로컬환경에서 띄워보는 것이 좋다.<br>\n서버를 끄려면 서버가 켜져있는 터미널에서 <code class=\"language-text\">ctrl + c</code> 를 입력한다.</p>\n<br>\n<h1 id=\"gatsby-소스코드-수정\" style=\"position:relative;\"><a href=\"#gatsby-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95\" aria-label=\"gatsby 소스코드 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby 소스코드 수정</h1>\n<p>gatsby-starter-bee에서는 Netlify로도 배포할 수 있도록 하는데, netlify의 도메인을 가지게 된다.<br>\n그 방법은 해당 테마 repository의 readme.md를 참고하도록 하고, 여기서는 github.io 도메인으로 배보하는 방법을 적는다.</p>\n<p>github pages를 통해 배포하고 싶다면, 코드 소스에서 <code class=\"language-text\">package.json</code> 파일의 <code class=\"language-text\">scripts</code>부분에 아래의 내용을 추가한다.<br>\nscripts에 이미 다른 것들도 기재되어 있으므로, 마지막 부분에 deploy 한줄을 추가하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"scripts\": {\n    \"deploy\": \"gatsby build &amp;&amp; gh-pages -d public -b master\"\n}</code></pre></div>\n<br>\n<h1 id=\"githubio\" style=\"position:relative;\"><a href=\"#githubio\" aria-label=\"githubio permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>github.io</h1>\n<p>github에서 새로운 repository를 만든다.<br>\nrepo 이름은 <code class=\"language-text\">{github_username}.github.io</code>로 만든다.</p>\n<blockquote>\n<p>ex) hong-dev.github.io</p>\n</blockquote>\n<p>Public으로 만들어야 github.io 도메인으로 접속하는 주소를 사용할 수 있다.</p>\n<br>\n<p>새로 만든 깃헙 레포지토리로 로컬에 있는 블로그 소스코드를 올린다.<br>\n서버를 켰었던 터미널에서 다음 명령어를 차례로 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git init\ngit remote add origin https://github.com/hong-dev/hong-dev.github.io.git</code></pre></div>\n<blockquote>\n<p>새로 생성한 repository에 들어가면 Quick setup 밑에 주소가 적혀있는데, 그 github 주소를 복사해서 입력한다.</p>\n</blockquote>\n<br>\n<p>아래의 명령어를 실행하면 origin 주소가 잘 연결되어 있는지 확인 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git remote -v</code></pre></div>\n<br>\n<p>명령어를 차례로 실행하여 github repository에 소스코드를 올린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add .\ngit commit -m \"first commit\"\ngit push origin master</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">.</code> 은 현재 디렉토리에 있는 모든 코드를 다 포함한다는 의미다.</p>\n</blockquote>\n<br>\n<p>github repo에 push 한 소스코드가 잘 올라왔다면 성공!</p>\n<br>\n<h1 id=\"deploy\" style=\"position:relative;\"><a href=\"#deploy\" aria-label=\"deploy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy</h1>\n<p>github repo에 코드를 올린다고 해서 블로그가 자동으로 생기는 것은 아니다.<br>\ngithub.io 도메인으로 블로그를 사용하기 위해서 배포 과정이 필요하다.</p>\n<p>우선, github 블로그 도메인이 잘 지정되어 있는지 확인해본다.  </p>\n<blockquote>\n<p><strong>Repo ➡ Settings ➡ Options ➡ GitHub Pages</strong>  </p>\n</blockquote>\n<p>settings에 가면 아래와 같이 내 블로그 도메인 주소를 확인할 수 있다.<br>\nRepo가 Private이라면 깃헙 페이지는 생성할 수 없다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/81479740-21372800-9260-11ea-8677-5abdbae3ea5b.png\" alt=\"github domain address\"></p>\n<br>\n<p>Github repo에 push 한 소스코드를 모든 사람들이 접근해서 볼 수 있도록 배포한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn deploy</code></pre></div>\n<blockquote>\n<p>권한 error가 발생한다면, <code class=\"language-text\">sudo yarn deploy</code> 를 실행한다.</p>\n</blockquote>\n<br>\n<p>만약에 gh-pages가 없다는 error 메시지가 뜬다면, gh-pages 모듈을 설치해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install gh-pages</code></pre></div>\n<p>deploy 명령어가 실행되어, 마지막에 <code class=\"language-text\">Done</code> 이라고 뜬다면 성공!<br>\n배포 후에는 블로그 도메인 주소로 들어가서 확인하면 되는데, 배포가 바로 안 되고 한참 뒤에 적용 될 수도 있다는..</p>\n<br>\n<h1 id=\"branch-따기\" style=\"position:relative;\"><a href=\"#branch-%EB%94%B0%EA%B8%B0\" aria-label=\"branch 따기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Branch 따기</h1>\n<p>master branch는 사용하지 않고, develop이라는 브랜치를 따로 만들어서 여기로만 올리도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git branch develop\ngit checkout develop</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">git checkout -b develop</code> 는 위의 두줄을 실행한 것과 동일한 명령어다.</p>\n</blockquote>\n<br>\n<p>develop branch에서 수정한 소스코드를 git에 올리는 과정</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add .\ngit commit -m “commit message”\ngit push -u origin develop</code></pre></div>\n<br>\n<p>다만, 이렇게 하면 매번 repository에 Pull Request를 올리고, merge를 하는 과정을 거쳐야한다.<br>\n그래서 develop branch를 github default branch로 바꾼다.  </p>\n<blockquote>\n<p><strong>Repo ➡ Settings ➡ Branches ➡ Default branch</strong></p>\n</blockquote>\n<p>default branch를 develop으로 바꾸고 update를 눌러 적용한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/81480486-1cc13e00-9265-11ea-9dae-7f6c01f33d3b.png\" alt=\"default branch\"></p>\n<p>이제 PR 날리지 않아도 develop branch에서 push 하면 repo에 바로 update 된다!</p>\n<br>\n<h1 id=\"customize\" style=\"position:relative;\"><a href=\"#customize\" aria-label=\"customize permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customize</h1>\n<p>정말 감사하게도 bee 테마는 기본적인 프로필 정보를 어디서 어떻게 바꾸면 되는지 친절하게 설명해준다.</p>\n<p><a href=\"https://github.com/JaeYeopHan/gatsby-starter-bee/blob/master/README.ko.md\">▶ bee 테마의 README.ko.md</a></p>\n<p>그 외에 레이아웃이나 소소한 css 같은 것들을 바꾸고 싶다면, 하나하나 뜯어보는 수밖에..<br>\n그렇지만 bee 테마는 readme에 다른 사용자들의 링크가 있어서 코드를 참고할 수 있다!<br>\n뜯어보고 참고하고 이거저거 바꿔보면서 조금씩 수정해봐야지.. 🐤</p>\n<br>\n<br>\n<br>\n<br>\n<blockquote>\n<p>Reference: <a href=\"https://yeri-kim.github.io/posts/how-to-install-gatsby/\">Gatsby로 블로그 만들기</a></p>\n</blockquote>","frontmatter":{"title":"Start Github Blog (Gatsby)","date":"May 04, 2020","category":"gatsby","thumbnail":null}}},"pageContext":{"slug":"/blog/build_gatsby_blog/","previous":{"fields":{"slug":"/bftest/retrospective/"},"frontmatter":{"title":"[BF-TEST] Retrospective","category":"project","draft":false}},"next":{"fields":{"slug":"/blog/thumbnail/"},"frontmatter":{"title":"Edit Post Thumbnail","category":"gatsby","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
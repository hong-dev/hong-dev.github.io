{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/category/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9e0c7bc4-0d26-558f-8370-c1209ee6d33c","excerpt":"Gatsby 블로그에서 포스팅마다 설정한 category 정보를 썸네일과 본문 페이지에서 보여주기 1. Thumbnail에 category 추가 블로그 포스트 목록 위에는 category별로 분류할 수 있는 메뉴가 있다. 누르면 해당하는 카테고리의 포스트들을 보여주지만, 포스트별로 어떤 카테고리에 담겨있는지는 썸네일만 보고는 알 수 없다. 예를 들어 logout API에 관한 포스팅을 했는데, 이 포스팅이 django 관련인지 뭔지는 제목만 보고는 알 수가 없다. 제목 앞에 일일이 django…","html":"<p>Gatsby 블로그에서 포스팅마다 설정한 category 정보를 썸네일과 본문 페이지에서 보여주기</p>\n<h2 id=\"1-thumbnail에-category-추가\" style=\"position:relative;\"><a href=\"#1-thumbnail%EC%97%90-category-%EC%B6%94%EA%B0%80\" aria-label=\"1 thumbnail에 category 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Thumbnail에 category 추가</h2>\n<p>블로그 포스트 목록 위에는 category별로 분류할 수 있는 메뉴가 있다.<br>\n누르면 해당하는 카테고리의 포스트들을 보여주지만, 포스트별로 어떤 카테고리에 담겨있는지는 썸네일만 보고는 알 수 없다.</p>\n<p>예를 들어 logout API에 관한 포스팅을 했는데, 이 포스팅이 django 관련인지 뭔지는 제목만 보고는 알 수가 없다.<br>\n제목 앞에 일일이 [django]를 적기에는 지저분한 것 같아, 날짜 앞에 카테고리 정보를 넣어보기로 한다.</p>\n<p>썸네일에 날짜 넣는 것은 지난 포스팅에서 해봤으니, 그 앞에 카테고리만 추가하면 된다. ▶<a href=\"https://hong-dev.github.io/blog/thumbnail/\">thumbnail에 날짜 넣기</a></p>\n<br>\n<p>🔽 <em>thumbnail의 날짜 앞에 category 정보가 들어가기 전과 후</em></p>\n<img alt=\"original format\" src=\"https://user-images.githubusercontent.com/53142539/83346774-6085ff80-a35a-11ea-868b-7a8dd7486b09.png\" width=\"460\" style=\"float:left\">\n<img alt=\"revised format\" src=\"https://user-images.githubusercontent.com/53142539/83346776-62e85980-a35a-11ea-8b4a-36160d038137.png\" width=\"460\">\n<br>\n<br>\n<hr>\n<h3 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h3>\n<blockquote>\n<p>src/components/thumbnail-item/index.jsx</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>[1]</strong><br>\nReact에서는 inline으로 css를 추가할 때,</p>\n<ol>\n<li><code class=\"language-text\">style={{ }}</code>방식으로 괄호가 두번 쓰인다.  </li>\n<li>각각의 css를 구분하는 것은 <code class=\"language-text\">;</code>가 아닌 <code class=\"language-text\">,</code>(comma)다.  </li>\n<li>font-size는 <code class=\"language-text\">fontSize</code>, font-weight는 <code class=\"language-text\">fontWeight</code>와 같은 형태로 사용한다.</li>\n</ol>\n</li>\n</ul>\n<br>\n<ul>\n<li><strong>[2]</strong><br>\n{node.frontmatter.date} 앞에 <code class=\"language-text\">{node.frontmatter.category}</code>를 담은 span을 추가한다.<br>\n여기서는 카테고리와 날짜를 구분하기 위해 <code class=\"language-text\">|</code> 기호도 함께 추가했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ThumbnailItem</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Link className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">thumbnail </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">TARGET_CLASS</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>slug<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>time className<span class=\"token operator\">=</span><span class=\"token string\">\"thumbnail-date\"</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>       <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#8fa8c4'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">'16px'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontWeight</span><span class=\"token operator\">:</span> <span class=\"token string\">'bold'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>         <span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>time<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">__html</span><span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>excerpt <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link <span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h2 id=\"2-post-page에-category-추가\" style=\"position:relative;\"><a href=\"#2-post-page%EC%97%90-category-%EC%B6%94%EA%B0%80\" aria-label=\"2 post page에 category 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Post page에 category 추가</h2>\n<p>thumbnail에서 category를 추가했으니, 본문 페이지에도 category를 추가하고 싶다.<br>\nthumbnail과 비슷한 형식으로 날짜 앞에 category 정보를 넣어보기로 한다.</p>\n<br>\n<p>🔽 <em>post 날짜 앞에 category 정보가 들어가기 전과 후</em></p>\n<img alt=\"original format\" src=\"https://user-images.githubusercontent.com/53142539/83347390-bf9a4300-a35f-11ea-98b0-087486fe9c80.png\" width=\"460\" style=\"float:left\">\n<img alt=\"revised format\" src=\"https://user-images.githubusercontent.com/53142539/83347391-c0cb7000-a35f-11ea-8bd0-19fe05b0e088.png\" width=\"460\">\n<br>\n<br>\n<hr>\n<h3 id=\"code-1\" style=\"position:relative;\"><a href=\"#code-1\" aria-label=\"code 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h3>\n<blockquote>\n<p>src/components/post-date/index.jsx</p>\n</blockquote>\n<ul>\n<li><strong>[1]</strong>\ndate 옆에 category를 추가해준다.</li>\n<li><strong>[2]</strong>\ndate를 span으로 감싸고, 그 앞에 category를 span으로 추가한다.</li>\n<li><strong>[3]</strong>\nspan 2개를 감싸는 하나의 큰 태그를 씌우지 않으면 에러가 발생한다. 여기서는 p 태그를 씌웠다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">PostDate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> date<span class=\"token punctuation\">,</span> category <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"post-date\"</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>       <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>category<span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'#3f526b'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>date<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<blockquote>\n<p>src/templates/blog-post.js</p>\n</blockquote>\n<ul>\n<li><strong>[1]</strong>\n여기에서 <code class=\"language-text\">category</code>를 추가해서 선언해줘야 아래의 return 값에서 category를 사용할 수 있다.</li>\n<li><strong>[2]</strong>\n위에서 index.jsx 파일의 PostDate에 category를 추가했으므로, <code class=\"language-text\">category={category}</code>로 category가 무엇인지 선언해준다.<br>\n여기에서 category를 정의해주지 않으면, 에러는 없지만 category 정보가 나타나지 않는다.<br>\n앞 부분의 <code class=\"language-text\">category</code>는 PostDate에 들어있는(index.jsx 파일에서 사용한) category를 말하고, <code class=\"language-text\">{category}</code>는 [1]에서 const로 선언한 category를 말한다.</li>\n<li><strong>[3]</strong>\ngraphql을 사용하여 data를 가져와야 하는데, blog-post 페이지에서는 category를 가져오지 않고 있었다.<br>\n이제 post 페이지에서도 category를 사용해야하므로, frontmatter 안에 <code class=\"language-text\">category</code>를 추가해서 data를 가져올 수 있도록 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> pageContext<span class=\"token punctuation\">,</span> location <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>중략<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> disqusShortName<span class=\"token punctuation\">,</span> utterances <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> comment\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> postTitle<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> thumbnail<span class=\"token punctuation\">,</span> category <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> post<span class=\"token punctuation\">.</span>frontmatter\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span>중략<span class=\"token punctuation\">]</span>\n        <span class=\"token operator\">&lt;</span>PostTitle title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>postTitle<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>     <span class=\"token operator\">&lt;</span>PostDate date<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>date<span class=\"token punctuation\">}</span> category<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>category<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>PostContainer html<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        [중략]\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n[3]       category\n          thumbnail {\n            childImageSharp {\n              fixed(width: 800) {\n                src\n              }\n            }\n          }\n        }\n  </span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>","frontmatter":{"title":"Thumbnail과 Post page에 category 정보 넣기","date":"May 31, 2020","category":"gatsby","thumbnail":null}}},"pageContext":{"slug":"/blog/category/","previous":{"fields":{"slug":"/django/logout/"},"frontmatter":{"title":"Logout API using Cache","category":"django","draft":false}},"next":{"fields":{"slug":"/commands/find/"},"frontmatter":{"title":"shell commands: find","category":"commands","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
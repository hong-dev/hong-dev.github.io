{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/collections/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d7722e86-ffc8-59e0-9f8d-27583ce8c9cd","excerpt":"Solution 1 : Fail 집합 연산을 쉽게 할 수 있는 set을 사용할 수 있지 않을까? Set 집합 연산 사용하기 case_1이든 case_2든 각각의 list를 set으로 만들어준다음 연산을 해야하는데, 여기에서는 이름이 같은 참가자들이 있으므로 set을 씌우면 중복값이 사라져서 의미가 없다. Solution 2 participant와 completion 각각의 list를 sort해서 순서를 맞춘 다음, element를 순서대로 비교하면서 다르면 해당 값을 return…","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">참가자(participant) 중에서 완주하지 못한 사람은 1명이다.\n참가자끼리는 이름이 같은 사람이 있을 수 있다.\n완주하지 못한 사람(completion 명단에 없는 사람)을 찾아라. </code></pre></div>\n<h3 id=\"solution-1--fail\" style=\"position:relative;\"><a href=\"#solution-1--fail\" aria-label=\"solution 1  fail permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution 1 : Fail</h3>\n<ul>\n<li>집합 연산을 쉽게 할 수 있는 set을 사용할 수 있지 않을까?<br>\n<a href=\"hong-dev.github.io/posts/python/set\">Set 집합 연산 사용하기</a></li>\n<li>case_1이든 case_2든 각각의 list를 set으로 만들어준다음 연산을 해야하는데, 여기에서는 이름이 같은 참가자들이 있으므로 set을 씌우면 중복값이 사라져서 의미가 없다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span> <span class=\"token comment\">#case_1</span>\n\n    <span class=\"token builtin\">set</span><span class=\"token punctuation\">.</span>symmetric_difference<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#case_2</span></code></pre></div>\n<h3 id=\"solution-2\" style=\"position:relative;\"><a href=\"#solution-2\" aria-label=\"solution 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution 2</h3>\n<ul>\n<li>participant와 completion 각각의 list를 sort해서 순서를 맞춘 다음, element를 순서대로 비교하면서 다르면 해당 값을 return 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    participant<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    completion<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> participant<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span>  completion<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">=</span> participant<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h3 id=\"collectionscounter\" style=\"position:relative;\"><a href=\"#collectionscounter\" aria-label=\"collectionscounter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>collections.Counter()</h3>\n<ul>\n<li>\n<p>list의 각 element들의 개수를 <code class=\"language-text\">{element : count}</code> 형태의 dictionary로 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mislav'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>Counter 객체끼리 빼면(-) 객체 간의 차집합만 남는다.</li>\n<li>\n<p>Counter.keys(), values(), items()를 하면 아래의 값처럼 return 되어 그 값을 바로 쓸 수 있는 것이 아니다.<br>\nlist를 씌우면 앞 부분이 사라지고 ()안에 있는 list만 남는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">dict_keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'mislav'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndict_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndict_items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mislav'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"model-solution\" style=\"position:relative;\"><a href=\"#model-solution\" aria-label=\"model solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> collections\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>Reference: <a href=\"https://programmers.co.kr/learn/challenges\">프로그래머스 코딩테스트 연습</a></li>\n</ul>","frontmatter":{"title":"list 간의 차집합","date":"April 07, 2020","category":"algorithm","thumbnail":null}}},"pageContext":{"slug":"/algorithm/collections/","previous":{"fields":{"slug":"/gopizza/dataframe/"},"frontmatter":{"title":"Pandas DataFrame을 사용한 User별 점수 Ranking","category":"python","draft":false}},"next":{"fields":{"slug":"/python/set/"},"frontmatter":{"title":"Set Operation","category":"python","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
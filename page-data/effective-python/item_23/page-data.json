{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_23/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7ea40838-cc9e-50f9-9e79-6202c48c3ffd","excerpt":"Effective Python: Second Edition 내용 정리 Item 23: Provide Optional Behavior with Keyword Arguments 대부분의 다른 프로그래밍 언어들과 마찬가지로, 파이썬도 함수를 호출할 때 position으로 arguments를 전달할 수 있다. (positional arguments) keyword에 할당하여 함수의 arguments로 넘겨줄 수도 있다. (keyword arguments) keyword arguments…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-23-provide-optional-behavior-with-keyword-arguments\" style=\"position:relative;\"><a href=\"#item-23-provide-optional-behavior-with-keyword-arguments\" aria-label=\"item 23 provide optional behavior with keyword arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 23: Provide Optional Behavior with Keyword Arguments</h2>\n<ul>\n<li>대부분의 다른 프로그래밍 언어들과 마찬가지로, 파이썬도 함수를 호출할 때 position으로 arguments를 전달할 수 있다. (positional arguments)</li>\n<li>\n<p>keyword에 할당하여 함수의 arguments로 넘겨줄 수도 있다. (keyword arguments)</p>\n<p>keyword arguments는 순서에 상관없이 적을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span>number<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>Positional arguments는 무조건 keyword arguments 앞에 놓아야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">some_func<span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\nSyntaxError<span class=\"token punctuation\">:</span> positional argument follows keyword argument</code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>각 argument는 한번만 지정되어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\nTypeError<span class=\"token punctuation\">:</span> some_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> got multiple values <span class=\"token keyword\">for</span> argument <span class=\"token string\">'alpha'</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"code-classlanguage-textcode-operator\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcode-operator\" aria-label=\"code classlanguage textcode operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">**</code> operator</h3>\n<ul>\n<li>\n<p>dictionary 앞에 <code class=\"language-text\">**</code>을 적으면, 파이썬은 dictionary를 함수의 keyword arguments로 넘겨준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nsome_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'alpha'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n\nsome_func<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>some_kwargs<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">**</code>는 positional arguments나 다른 keyword arguments와 함께 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">some_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'number'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n\nsome_func<span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>some_kwargs<span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>some_kwargs<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">**</code>를 여러번 사용할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">some_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'number'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\nother_kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'alpha'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">}</span>\n\nsome_func<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>some_kwargs<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>other_kwargs<span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>other_kwargs<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>some_kwargs<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"code-classlanguage-textkwargscode-catch-all-parameter\" style=\"position:relative;\"><a href=\"#code-classlanguage-textkwargscode-catch-all-parameter\" aria-label=\"code classlanguage textkwargscode catch all parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">**kwargs</code> catch-all parameter</h3>\n<ul>\n<li>\n<p>함수를 정의할 때, 모든 arguments를 dictionary로 받을 수 있도록 <code class=\"language-text\">**kwargs</code>를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n\nsome_func<span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">=</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'alpha'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"keyword-arguments-장점-3가지\" style=\"position:relative;\"><a href=\"#keyword-arguments-%EC%9E%A5%EC%A0%90-3%EA%B0%80%EC%A7%80\" aria-label=\"keyword arguments 장점 3가지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>keyword arguments 장점 3가지</h3>\n<ol>\n<li>\n<p><strong>함수 호출 코드를 명확하게 한다.</strong></p>\n<p><code class=\"language-text\">func('a', 10)</code> 형태로 호출하면, a가 무엇인지 10이 무엇을 의미하는 지 알기 어렵다.<br>\nparameter들의 type이 동일할 때는 더더욱 헷갈리기 쉽다.<br>\nkeyword arguments는 각각의 parameter들이 어떻게 사용되는지 바로 알 수 있게 한다.</p>\n</li>\n</ol>\n<br>\n<ol start=\"2\">\n<li>\n<p><strong>parameter의 default value를 지정할 수 있다.</strong>\ndefault 값이 지정된 parameter는 함수 호출 시에 적지 않아도 되는 optional 한 값이 된다.\ndefault 값을 지정하면, 중복되는 코드를 제거하고 noise를 줄일 수 있다.</p>\n<p>단순한 default values는 잘 작동하지만, complex default values에 적용하기에는 까다로워진다. (Item 24 참조)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">,</span> param1<span class=\"token operator\">=</span><span class=\"token string\">'default_value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nsome_func<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<br>\n<ol start=\"3\">\n<li>\n<p><strong>이미 존재하는 함수 caller들에 영향을 주지 않고, 함수의 parameters를 늘릴 수 있다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">some_func</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">,</span> param1<span class=\"token operator\">=</span><span class=\"token string\">'default1'</span><span class=\"token punctuation\">,</span> param2<span class=\"token operator\">=</span><span class=\"token string\">'default2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></code></pre></div>\n</li>\n</ol>\n<br>\n<h3 id=\"optional-keyword-arguments-단점\" style=\"position:relative;\"><a href=\"#optional-keyword-arguments-%EB%8B%A8%EC%A0%90\" aria-label=\"optional keyword arguments 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>optional keyword arguments 단점</h3>\n<ul>\n<li>\n<p>함수에 default 값이 지정된 keyword arguments도 positional arguments처럼 keyword 없이 위치로 지정할 수 있다.</p>\n<p>하지만 이렇게 하는 것은, parameter가 각각 어떤 것인지 명확하게 알 수 없다는 단점이 있다.</p>\n</li>\n<li>가장 좋은 방법은 항상 keyword name으로 지정하고, 절대 positional arguments 처럼 넘기지 않는 것이다.</li>\n<li>또한 모든 함수 caller에게 명시적인 keyword style을 사용하도록 요구할 수 있다. (Item 25 참조)</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 23: Provide Optional Behavior with Keyword Arguments","date":"September 20, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_23/","previous":{"fields":{"slug":"/effective-python/item_22/"},"frontmatter":{"title":"Item 22: Reduce Visual Noise with Variable Positional Arguments","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_24/"},"frontmatter":{"title":"Item 24: Default Arguments","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_9/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"325b6887-f08e-55d3-bdcd-5ff98c62b44f","excerpt":"Effective Python: Second Edition 내용 정리 Item 9: Avoid else Blocks After for and while Loops Python에는 대부분의 다른 프로그램 언어에서는 가능하지 않은 추가 기능이 있다: 반복문의 block 직후에  block을 사용할 수 있다. 반복문(for loop, while loop) 뒤에 오는  block은 반복문 안에서 를 만나지 않는다면 실행된다. (반복문 안에서 break가 실행되면, else…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-9-avoid-else-blocks-after-for-and-while-loops\" style=\"position:relative;\"><a href=\"#item-9-avoid-else-blocks-after-for-and-while-loops\" aria-label=\"item 9 avoid else blocks after for and while loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 9: Avoid else Blocks After for and while Loops</h2>\n<ul>\n<li>Python에는 대부분의 다른 프로그램 언어에서는 가능하지 않은 추가 기능이 있다:<br>\n반복문의 block 직후에 <code class=\"language-text\">else</code> block을 사용할 수 있다.</li>\n<li>반복문(for loop, while loop) 뒤에 오는 <code class=\"language-text\">else</code> block은 반복문 안에서 <code class=\"language-text\">break</code>를 만나지 않는다면 실행된다.<br>\n(반복문 안에서 break가 실행되면, else는 실행되지 않는다.)</li>\n<li>우리가 보통 사용하는 <code class=\"language-text\">else</code>는, 앞의 block이 실행되지 않을 경우 else block을 실행하라 라는 의미로 이해한다.<br>\n반복문 뒤의 else는 그런 의미가 아니기 때문에, 헷갈릴 수 있고 이게 무슨 역할인지 이름만 봐서는 알기 어려우므로 사용하지 말자.</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 9: Avoid else Blocks After for and while Loops","date":"August 29, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_9/","previous":{"fields":{"slug":"/effective-python/item_8/"},"frontmatter":{"title":"Item 8: Use zip to Process Iterators in Parallel","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_10/"},"frontmatter":{"title":"Item 10: Prevent Repetition with Assignment Expressions","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
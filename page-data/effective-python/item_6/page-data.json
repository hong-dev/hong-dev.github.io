{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_6/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f5fc1677-2da2-530c-98ac-f6ee602d26e6","excerpt":"Effective Python: Second Edition 내용 정리 Item 6: Prefer Multiple Assignment Unpacking Over Indexing Tuple immutable and ordered sequences of values (값을 바꿀 수 없고 순서가 있음) 가장 simple한 case는, dictionary의 key-value 처럼 two values의 pair index로 접근 가능 tuple 값이 한번 정해지면, assign…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-6-prefer-multiple-assignment-unpacking-over-indexing\" style=\"position:relative;\"><a href=\"#item-6-prefer-multiple-assignment-unpacking-over-indexing\" aria-label=\"item 6 prefer multiple assignment unpacking over indexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 6: Prefer Multiple Assignment Unpacking Over Indexing</h2>\n<h3 id=\"tuple\" style=\"position:relative;\"><a href=\"#tuple\" aria-label=\"tuple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple</h3>\n<ul>\n<li>immutable and ordered sequences of values (값을 바꿀 수 없고 순서가 있음)</li>\n<li>가장 simple한 case는, dictionary의 key-value 처럼 two values의 pair</li>\n<li>index로 접근 가능</li>\n<li>tuple 값이 한번 정해지면, assign 해서 값을 바꾸려하면 <code class=\"language-text\">TypeError</code> 발생<br>\n(TypeError: ‘tuple’ object does not support item assignment)</li>\n</ul>\n<br>\n<h3 id=\"unpacking\" style=\"position:relative;\"><a href=\"#unpacking\" aria-label=\"unpacking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unpacking</h3>\n<ul>\n<li>여러 개의 값을 assign 하는 문법</li>\n<li>assign해서 tuple 값을 바꾸는 것처럼 보이지만 실제로 바꾸는 것은 아니다.</li>\n<li>unpacking은 python에서 일반화 되어있고, 다양한 반복 표현 안에서 적용 가능하다.</li>\n<li>\n<p><strong>tuple의 index로 접근하는 것보다 unpacking 하는 것이 훨씬 깔끔하고 때로는 코드 줄 수가 더 적다.</strong><br>\n굳이 index로 접근해야 하는 경우는 잘 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">item <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\nfirst<span class=\"token punctuation\">,</span> second <span class=\"token operator\">=</span> item\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> <span class=\"token string\">'and'</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> A <span class=\"token keyword\">and</span> B</code></pre></div>\n</li>\n<li>unpacking에 관한 다른 chapters:<br>\n<strong>Item 13</strong> (for list construction): Prefer Catch-All Unpacking Over Slicing<br>\n<strong>Item 22</strong> (for function arguments): Reduce Visual Noise with Variable Positional Arguments<br>\n<strong>Item 23</strong> (for keyword arguments): Provide Optional Behavior with Keyword Arguments<br>\n<strong>Item 19</strong> (for multiple return values): Never Unpack More Than Three Variables When Functions Return Multiple Values</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 6: Prefer Multiple Assignment Unpacking Over Indexing","date":"August 24, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_6/","previous":{"fields":{"slug":"/effective-python/item_5/"},"frontmatter":{"title":"Item 5: Write Helper Functions Instead of Complex Expressions","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_7/"},"frontmatter":{"title":"Item 7: Prefer enumerate Over range","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
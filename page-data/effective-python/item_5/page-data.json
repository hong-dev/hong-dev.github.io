{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_5/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b506ca6b-9d42-5d07-a482-c8263f3d6a43","excerpt":"Effective Python: Second Edition 내용 정리 Item 5: Write Helper Functions Instead of Complex Expressions Python 문법에서는 지나치게 복잡하고 읽기 어려운 single-line 표현식이 만들어지기 쉽다. 한문장으로 만들겠다고 함수 안의 함수 안의 메소드로 연결하거나,   operator를 사용하는 등의 복잡한 표현식을 만들지 말자. if/else…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-5-write-helper-functions-instead-of-complex-expressions\" style=\"position:relative;\"><a href=\"#item-5-write-helper-functions-instead-of-complex-expressions\" aria-label=\"item 5 write helper functions instead of complex expressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 5: Write Helper Functions Instead of Complex Expressions</h2>\n<ul>\n<li>Python 문법에서는 지나치게 복잡하고 읽기 어려운 single-line 표현식이 만들어지기 쉽다.</li>\n<li>한문장으로 만들겠다고 함수 안의 함수 안의 메소드로 연결하거나, <code class=\"language-text\">or</code> <code class=\"language-text\">and</code> operator를 사용하는 등의 복잡한 표현식을 만들지 말자.</li>\n<li>if/else 문도 한문장에 이어서 쓰는 것보다 여러 줄에 걸쳐서 쓰는 것이 더 clear하다.</li>\n<li>2번 이상 반복적으로 사용될 표현식이라면 helper function을 만들어 사용한다.</li>\n<li>표현식이 복잡해지면, 이걸 작에 쪼개고 logic은 helper function에 넣는 것을 고려하자.</li>\n<li><strong>가독성에서 얻을 수 있는 것은 간결성에서 얻는 것보다 항상 더 크다. (간결성 &#x3C; 가독성)</strong><br>\n복잡한 표현에 대한 간결하고 함축적인 표현이 당신을 이런 혼란에 빠뜨리지 않도록 하라.</li>\n<li>Follow the <code class=\"language-text\">DRY principle</code>: Don’t repeat yourself.</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 5: Write Helper Functions Instead of Complex Expressions","date":"August 24, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_5/","previous":{"fields":{"slug":"/effective-python/item_4/"},"frontmatter":{"title":"Item 4: C-style, str.format(), F-Strings","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_6/"},"frontmatter":{"title":"Item 6: Prefer Multiple Assignment Unpacking Over Indexing","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
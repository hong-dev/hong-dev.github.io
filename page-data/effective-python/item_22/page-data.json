{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_22/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"1b408e26-344e-5f8c-aad2-c5d391bf52d0","excerpt":"Effective Python: Second Edition 내용 정리 Item 22: Reduce Visual Noise with Variable Positional Arguments 를 사용하여 positional arguments 개수를 다양하게 받을 수 있는 함수는, 함수 호출을 더 깔끔하게 만든다. positional arguments : ,  라고도 불린다. parameter 앞에 를 붙이면, positional arguments의 개수는 optional…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-22-reduce-visual-noise-with-variable-positional-arguments\" style=\"position:relative;\"><a href=\"#item-22-reduce-visual-noise-with-variable-positional-arguments\" aria-label=\"item 22 reduce visual noise with variable positional arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 22: Reduce Visual Noise with Variable Positional Arguments</h2>\n<ul>\n<li><code class=\"language-text\">*</code>를 사용하여 positional arguments 개수를 다양하게 받을 수 있는 함수는, 함수 호출을 더 깔끔하게 만든다.</li>\n<li>positional arguments : <code class=\"language-text\">varargs</code>, <code class=\"language-text\">star args</code> 라고도 불린다.</li>\n<li>\n<p>parameter 앞에 <code class=\"language-text\">*</code>를 붙이면, positional arguments의 개수는 optional하다. 없어도 되고 많아도 되고.</p>\n<p>별표가 없다면, 무조건 하나의 parameter로 입력되어야 하고 값이 없다고 하더라도 빈 list를 넣어줘야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> values<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        values_str <span class=\"token operator\">=</span> <span class=\"token string\">' and '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> values<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span></span><span class=\"token string\"> are </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>values_str<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\nlog<span class=\"token punctuation\">(</span><span class=\"token string\">'Fruits'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Fruits are apple <span class=\"token keyword\">and</span> banana\n\nlog<span class=\"token punctuation\">(</span><span class=\"token string\">'No Fruit'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> No Fruit</code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"problem-1\" style=\"position:relative;\"><a href=\"#problem-1\" aria-label=\"problem 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem 1</h3>\n<ul>\n<li>\n<p>optional positional arguments는 함수에 넘겨지기 전에 항상 tuple 형태로 바뀐다.</p>\n<p>함수의 caller가 generator에 <code class=\"language-text\">*</code> operator를 사용한다면, 그것이 소진될 때까지 반복할 것이다. (Item 30 참조)<br>\n즉, 만들어지는 튜플은 generator의 모든 values를 포함하고, 그것은 많은 메모리를 소모하며 프로그램이 중단을 야기할 수도 있다.</p>\n</li>\n<li>\n<p>따라서, <code class=\"language-text\">*args</code>는 그 input이 상당히 작을 것이라고 알고 있을 때 사용하는 것이 가장 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">my_generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> i\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">my_func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n\ngen <span class=\"token operator\">=</span> my_generator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmy_func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>gen<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"problem-2\" style=\"position:relative;\"><a href=\"#problem-2\" aria-label=\"problem 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem 2</h3>\n<ul>\n<li><code class=\"language-text\">*args</code>를 사용하는 함수에 새로운 positional parameter를 추가한다면, 찾기 힘든 버그를 발생시킬 수 있다.<br>\n(exceptions를 발생시키지 않고도 여전히 작동할 수 있기 때문에 이런 버그들은 추적하기 어렵다.)</li>\n<li>\n<p>해당 함수를 호출하던 caller들을 다 바꾸지 않으면, 기존의 caller들이 미묘하게 깨질 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sequence<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>버그 생성 가능성을 없애기 위해, <code class=\"language-text\">*args</code>를 가지는 함수의 parameter를 추가하고 싶을 때는 <code class=\"language-text\">keyword-only arguments</code>를 사용해야한다. (Item 25 참조)</li>\n<li>더 방어적으로는, <code class=\"language-text\">type annotations</code>를 사용하는 것 또한 고려할 수 있다. (Item 90)</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 22: Reduce Visual Noise with Variable Positional Arguments","date":"September 20, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_22/","previous":{"fields":{"slug":"/effective-python/item_21/"},"frontmatter":{"title":"Item 21: Closure and Scope","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_23/"},"frontmatter":{"title":"Item 23: Provide Optional Behavior with Keyword Arguments","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
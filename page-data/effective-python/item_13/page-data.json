{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_13/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"60904197-8e8d-5d66-a95f-f609da7d621e","excerpt":"Effective Python: Second Edition 내용 정리 Item 13: Prefer Catch-All Unpacking Over Slicing Unpacking 할 때 slicing 보다는 별표(*)를 활용하자. Unpacking 할 때는 unpacking 되어야 하는 것의 길이를 미리 알아야 한다는 단점이 있다. unpacking 할 것들의 길이와 unpacking 해서 할당할 변수의 개수가 같아야 함. 다르면  발생. (Item 11에서 unpacking assignment…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-13-prefer-catch-all-unpacking-over-slicing\" style=\"position:relative;\"><a href=\"#item-13-prefer-catch-all-unpacking-over-slicing\" aria-label=\"item 13 prefer catch all unpacking over slicing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 13: Prefer Catch-All Unpacking Over Slicing</h2>\n<ul>\n<li>Unpacking 할 때 slicing 보다는 별표(*)를 활용하자.</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>Unpacking 할 때는 unpacking 되어야 하는 것의 길이를 미리 알아야 한다는 단점이 있다.<br>\nunpacking 할 것들의 길이와 unpacking 해서 할당할 변수의 개수가 같아야 함. 다르면 <code class=\"language-text\">ValueError</code> 발생.<br>\n(<a href=\"https://hong-dev.github.io/effective_python/item_11_to_12/\">Item 11</a>에서 unpacking assignment와 slicing assignment 비교 참조)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n\nfirst<span class=\"token punctuation\">,</span> second <span class=\"token operator\">=</span> nums\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> ValueError<span class=\"token punctuation\">:</span> too many values to unpack <span class=\"token punctuation\">(</span>expected <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>그래서 이런 경우에, python을 처음 사용하는 사람들은 indexing과 slicing에 많이 의존한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n\nfirst <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nsecond <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nothers <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> others<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>⇒ 이 방법은 가능하지만 보기에 지저분하다.<br>\n그리고 개별로 할당을 하기 때문에, 저 중 하나가 바뀐다고 했을 때 다른 변수들도 다시 고려해야 하고, 에러가 발생하기 쉽다.</p>\n</li>\n</ul>\n<br>\n<h3 id=\"starred-expression-\" style=\"position:relative;\"><a href=\"#starred-expression-\" aria-label=\"starred expression  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>starred expression (*)</strong></h3>\n<ul>\n<li>\n<p>이런 경우에, Python은 <code class=\"language-text\">*</code>를 사용한 catch-all unpacking 기능을 제공한다.<br>\nunpacking과 같은 문법이지만, <code class=\"language-text\">*</code>이 붙은 변수에는 다른 변수들이 unpacking 하고 남은 element들을 list로 담아 할당한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>others <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> others<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>list로 할당받기 때문에 할당할 element가 없더라도 빈 list가 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>others <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> others<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>starred expression은 어느 위치에서든 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">first<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>others<span class=\"token punctuation\">,</span> last <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> others<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token number\">4</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">*</span>others<span class=\"token punctuation\">,</span> second_to_last<span class=\"token punctuation\">,</span> last <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>others<span class=\"token punctuation\">,</span> second_to_last<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><strong>주의사항 1 : <code class=\"language-text\">*</code>는 단독으로 쓰일 수 없다.</strong></p>\n<p>적어도 하나 이상의 다른 변수와 사용되어야 한다.\n단독으로 쓰면 <code class=\"language-text\">SyntaxError</code> 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">*</span>others <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> SyntaxError<span class=\"token punctuation\">:</span> starred assignment target must be <span class=\"token keyword\">in</span> a <span class=\"token builtin\">list</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">tuple</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><strong>주의사항 2 : 하나의 single-level unpacking pattern에서 여러 개의 <code class=\"language-text\">*</code>를 사용할 수 없다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">first<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>middle<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>second_middle<span class=\"token punctuation\">,</span> last <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> SyntaxError<span class=\"token punctuation\">:</span> two starred expressions <span class=\"token keyword\">in</span> assignment</code></pre></div>\n<ul>\n<li>\n<p>다만, multilevel structure일 때는 각기 다른 part들의 catch-alls 라면 여러 개의 <code class=\"language-text\">*</code>를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">city <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'Korea'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Seoul'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Busan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jeju'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'US'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Chicago'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Los Angeles'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Boston'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>country1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>first1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>rest1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span>country2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>first2<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>rest2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> city<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>country1<span class=\"token punctuation\">,</span> first1<span class=\"token punctuation\">,</span> rest1<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Korea Seoul <span class=\"token punctuation\">[</span><span class=\"token string\">'Busan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jeju'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>country2<span class=\"token punctuation\">,</span> first2<span class=\"token punctuation\">,</span> rest2<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> US New York <span class=\"token punctuation\">[</span><span class=\"token string\">'Chicago'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Los Angeles'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Boston'</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>별표 expression (<code class=\"language-text\">*</code>)은 항상 list가 되기 때문에, 그 data가 많을 경우 컴퓨터의 메모리를 다 써버릴 수 있다는 위험성이 있다.<br>\n그래서 result data가 memory 안에 다 들어갈 것이라고 믿을 만한 충분한 이유가 있을 때만, iterator에서 catch-all unpacking을 사용해야 한다.</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 13: asterisk(*) for unpacking","date":"September 05, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_13/","previous":{"fields":{"slug":"/python/f-string/"},"frontmatter":{"title":"f-string `=` (python 3.8)","category":"python","draft":false}},"next":{"fields":{"slug":"/effective-python/item_14/"},"frontmatter":{"title":"Item 14: list.sort(key=...)","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_3/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0e087b56-8cff-5eeb-a60d-528f476470f6","excerpt":"Effective Python: Second Edition 내용 정리 Item 3: Know the Differences Between bytes and str Python에서 character sequence를 나타내는 방식 :  (8-bit values),  (Unicode code points)  : Unicode data ⇒ Binary data  : Binary data ⇒ Unicode data 어떤 encoding을 사용할 것인지 명시할 수 있는데, 보통 default…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-3-know-the-differences-between-bytes-and-str\" style=\"position:relative;\"><a href=\"#item-3-know-the-differences-between-bytes-and-str\" aria-label=\"item 3 know the differences between bytes and str permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 3: Know the Differences Between bytes and str</h2>\n<ul>\n<li>Python에서 character sequence를 나타내는 방식 : <code class=\"language-text\">bytes</code> (8-bit values), <code class=\"language-text\">str</code> (Unicode code points)</li>\n<li><code class=\"language-text\">Encode</code> : Unicode data ⇒ Binary data<br>\n<code class=\"language-text\">Decode</code> : Binary data ⇒ Unicode data</li>\n<li>\n<p>어떤 encoding을 사용할 것인지 명시할 수 있는데, 보통 default는 <code class=\"language-text\">UTF-8</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">bytes_ins<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\nstr_ins<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>함수를 사용해서 input의 character sequence type을 확실히 하자.</li>\n<li>\n<p>system의 default text encoding을 조심하자. 잘 모른다면, encoding parameter를 확실하게 넣어주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># default text encoding 찾기</span>\n<span class=\"token keyword\">import</span> locale\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">.</span>getpreferredencoding<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><strong>Unicode sandwich :</strong><br>\nbytes는 밖에 두고 안에서는 str만 사용할 수 있도록, encoding과 decoding은 interface의 경계에서 이루어질 수 있도록 한다.</li>\n</ul>\n<br>\n<ul>\n<li>bytes(<code class=\"language-text\">b'hello'</code>)와 str(<code class=\"language-text\">hello</code>)은 <code class=\"language-text\">>, ==, +, %</code> 등의 operator에서 같이 사용될 수 없다. (서로 대체될 수 없음)</li>\n<li>\n<p><strong><code class=\"language-text\">%s</code>의 활용</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string\">b'red %s'</span> <span class=\"token operator\">%</span> <span class=\"token string\">'blue'</span>\n<span class=\"token operator\">>></span> TypeError\n\n<span class=\"token string\">'red %s'</span> <span class=\"token operator\">%</span> <span class=\"token string\">b'blue'</span>\n<span class=\"token operator\">>></span> red <span class=\"token string\">b'blue'</span>\n<span class=\"token comment\"># 예상한 return 값은 아니지만 위의 코드가 가능한 이유는,</span>\n<span class=\"token comment\"># `__repr__` method를 호출하기 때문 (자세한 내용은 Item 75 참조)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">with open</code> statement</strong><br>\n기본적으로 file handles operation은 Unicode strings이 default로 요구되는 것이고, binary를 사용하려면 말을 해줘야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data.bin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\tf<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\xf1\\xf2'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span> TypeError\n<span class=\"token comment\"># 'w'(write text mode) 대신에 'wb'(write binary mode)로 적어줘야한다.</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data.bin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\tdata <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span> UnicodeDecodeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'utf-8'</span> codec can't decode byte <span class=\"token number\">0xf1</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\"># binary data는 읽을 때도 'r'이 아닌 'rb'로 읽어와야한다.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 3: Know the Differences Between bytes and str","date":"August 19, 2020","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_3/","previous":{"fields":{"slug":"/effective-python/item_2/"},"frontmatter":{"title":"Item 2: Follow the PEP 8 Style Guide","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/python/the_zen_of_python/"},"frontmatter":{"title":"The Zen of Python","category":"python","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
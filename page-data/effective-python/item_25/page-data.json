{"componentChunkName":"component---src-templates-blog-post-js","path":"/effective-python/item_25/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"04a7f120-d4fc-5dde-955a-abf503799fb1","excerpt":"Effective Python: Second Edition 내용 정리 Item 25: Enforce Clarity with Keyword-Only and Positional-Only Arguments keyword arguments를 사용하면, 코드의 다양한 use cases를 명확하게 이해할 수 있게 해준다. Keyword-only arguments parameter가 여러 개인 함수를 호출할 때는 keyword를 적어주지 않으면 실수할 가능성이 높아진다.\n그렇기 때문에 parameter…","html":"<blockquote>\n<p><em>Effective Python: Second Edition 내용 정리</em></p>\n</blockquote>\n<h2 id=\"item-25-enforce-clarity-with-keyword-only-and-positional-only-arguments\" style=\"position:relative;\"><a href=\"#item-25-enforce-clarity-with-keyword-only-and-positional-only-arguments\" aria-label=\"item 25 enforce clarity with keyword only and positional only arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Item 25: Enforce Clarity with Keyword-Only and Positional-Only Arguments</h2>\n<ul>\n<li>\n<p>keyword arguments를 사용하면, 코드의 다양한 use cases를 명확하게 이해할 수 있게 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">division</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">,</span> divisor<span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> number <span class=\"token operator\">/</span> divisor\n    <span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ignore_zero_division<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inf\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inf</code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"keyword-only-arguments\" style=\"position:relative;\"><a href=\"#keyword-only-arguments\" aria-label=\"keyword only arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keyword-only arguments</h3>\n<ul>\n<li>parameter가 여러 개인 함수를 호출할 때는 keyword를 적어주지 않으면 실수할 가능성이 높아진다.\n그렇기 때문에 parameter의 keyword를 분명하게 적어주는 것이 필요하고, 그렇게 하도록 caller에게 요구할 필요가 있다.</li>\n<li><code class=\"language-text\">*</code>를 함수 parameter list의 중간에 넣으면, positional arguments가 끝나고 keyword-only arguments가 시작되었다는 것을 의미한다.</li>\n<li>\n<p>keyword-only arguments로 함수를 정의하면, caller가 keyword로 호출하지 않을 경우 에러가 난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">division</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">,</span> divisor<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#number, divisor는 positional args. ignore_zero_division은 keyword-only args.</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> number <span class=\"token operator\">/</span> divisor\n    <span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ignore_zero_division<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> TypeError<span class=\"token punctuation\">:</span> division<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> takes <span class=\"token number\">2</span> positional arguments but <span class=\"token number\">3</span> were given\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inf</code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"positional-only-arguments\" style=\"position:relative;\"><a href=\"#positional-only-arguments\" aria-label=\"positional only arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Positional-only arguments</h3>\n<ul>\n<li>Python 3.8부터 도입된 positional-only arguments는 함수의 parameter로 positional argument로만 사용하도록 요구한다.</li>\n<li>함수의 parameter 이름이 별 의미가 없거나 나중에 바뀔 가능성이 있어서 caller가 keyword를 지정하지 않았으면 할 때 사용할 수 있다.<br>\n만약 나중에 parameter 이름이 바뀐다면, keyword로 호출했던 기존의 caller들은 error가 날 것이기 때문이다.</li>\n<li><code class=\"language-text\">/</code>를 함수 parameter list의 중간에 넣으면, positional-only arguments가 끝난 것을 의미한다.</li>\n<li>\n<p>positional arguments는 기본적으로 keyword를 사용해도 되고 위치로 지정해도 되는데, positional-only arguments로 설정되면 위치로만 parameter를 넘겨줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">division</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">,</span> divisor<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#number, divisor는 positional-only args. ignore_zero_division은 keyword-only args.</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> number <span class=\"token operator\">/</span> divisor\n    <span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ignore_zero_division<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inf\n\ndivision<span class=\"token punctuation\">(</span>number<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> divisor<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> TypeError<span class=\"token punctuation\">:</span> division<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> got some positional<span class=\"token operator\">-</span>only arguments passed <span class=\"token keyword\">as</span> keyword arguments<span class=\"token punctuation\">:</span> <span class=\"token string\">'number, divisor'</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"parameter-between-code-classlanguage-textcode-and-code-classlanguage-textcode\" style=\"position:relative;\"><a href=\"#parameter-between-code-classlanguage-textcode-and-code-classlanguage-textcode\" aria-label=\"parameter between code classlanguage textcode and code classlanguage textcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameter between <code class=\"language-text\">/</code> and <code class=\"language-text\">*</code></h3>\n<ul>\n<li>\n<p><code class=\"language-text\">/</code>와 <code class=\"language-text\">*</code> 사이의 parameters는 position과 keyword 둘다 사용할 수 있다. (Python parameters의 default 기능)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">division</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">,</span> divisor<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> digits<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> ignore_zero_division<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#number, divisor는 positional-only args. digits는 둘 다 가능. ignore_zero_division은 keyword-only args.</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> number <span class=\"token operator\">/</span> divisor\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#결과값의 소수점 자리수 결정</span>\n    <span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ignore_zero_division<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3.14</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3.14286</span>\n\ndivision<span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> digits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3.14286</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://effectivepython.com/\"><em>Effective Python : Second Edition</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Item 25: Enforce Clarity with Keyword-Only and Positional-Only Arguments","date":"January 08, 2021","category":"[Effective Python]","thumbnail":null}}},"pageContext":{"slug":"/effective-python/item_25/","previous":{"fields":{"slug":"/effective-python/item_24/"},"frontmatter":{"title":"Item 24: Default Arguments","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_26/"},"frontmatter":{"title":"Item 26: Define Function Decorators with 'functools.wraps'","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
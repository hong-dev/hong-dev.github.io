{"componentChunkName":"component---src-templates-blog-post-js","path":"/spark-definitive-guide/03-tour-of-spark-toolset/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b2f66d63-a522-5156-a53a-0407a79b559c","excerpt":"Spark: The Definitive Guide 내용 정리 Production Application Spark를 사용하면 big data program을 쉽게 개발 할 수 있다. spark-submit 대화형 shell에서 개발한 program을 production application으로 쉽게 전환 가능 application code를 cluster에 전송해 실행시키는 역할 application 실행에 필요한 resource와 실행 방식, 그리고 다양한 option 지정 가능 Dataset…","html":"<blockquote>\n<p><em>Spark: The Definitive Guide 내용 정리</em></p>\n</blockquote>\n<br>\n<h1 id=\"production-application\" style=\"position:relative;\"><a href=\"#production-application\" aria-label=\"production application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Production Application</h1>\n<ul>\n<li>Spark를 사용하면 big data program을 쉽게 개발 할 수 있다.</li>\n</ul>\n<h3 id=\"spark-submit\" style=\"position:relative;\"><a href=\"#spark-submit\" aria-label=\"spark submit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>spark-submit</h3>\n<ul>\n<li>대화형 shell에서 개발한 program을 production application으로 쉽게 전환 가능</li>\n<li>application code를 cluster에 전송해 실행시키는 역할</li>\n<li>application 실행에 필요한 resource와 실행 방식, 그리고 다양한 option 지정 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>spark<span class=\"token operator\">-</span>submit \\\n  <span class=\"token operator\">-</span><span class=\"token operator\">-</span>master local \\\n  <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>examples<span class=\"token operator\">/</span>pi<span class=\"token punctuation\">.</span>py <span class=\"token number\">10</span></code></pre></div>\n<br>\n<h1 id=\"dataset\" style=\"position:relative;\"><a href=\"#dataset\" aria-label=\"dataset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dataset</h1>\n<blockquote>\n<p><strong>Statically typed (정적 타입):</strong> 자료형이 고정된 언어. Java, Scala, C, C++ 등.<br>\n<strong>Dynamically typed (동적 타입):</strong> Python, JavaScript 등</p>\n</blockquote>\n<ul>\n<li>Type-safe를 제공하는 structured API</li>\n<li>Statically typed code를 지원하기 위해 고안된 API로, 동적 타입 언어인 python과 R에서는 사용할 수 없다.</li>\n<li>DataFrame은 다양한 data type의 tabular data를 보관할 수 있는 Row type의 객체로 구성된 분산 collection.<br>\nDataset API는 이러한 DataFrame의 record를 사용자가 java나 scala로 정의한 class에 할당하고, 고정 타입형 collection으로 다룰 수 있는 기능을 제공</li>\n<li>Type-safe 하므로, 초기화에 사용한 class 대신 다른 class를 사용해 접근하는 것은 불가</li>\n<li>다수의 engineer가 잘 정의된 interface로 interact 하는 대규모 application을 개발하는 데 특히 유용</li>\n</ul>\n<br>\n<h1 id=\"structured-streaming\" style=\"position:relative;\"><a href=\"#structured-streaming\" aria-label=\"structured streaming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Structured Streaming</h1>\n<ul>\n<li>Spark 2.2 version에서 production-ready(안정화) 된 stream 처리용 고수준 API</li>\n<li>Structured API로 개발된 batch mode의 연산을 streaming 방식으로 실행할 수 있으며, latency를 줄이고 incremental processing을 할 수 있다.</li>\n<li>Structured streaming의 장점은 코드의 변경이 거의 없이 streaming 처리를 수행하고 값을 빠르게 얻을 수 있다는 것이다.</li>\n<li>Prototype을 batch job으로 개발한 다음 streaming job으로 변환할 수 있으므로 개념 잡기가 쉽다.</li>\n</ul>\n<br>\n<h3 id=\"example-static-dataset\" style=\"position:relative;\"><a href=\"#example-static-dataset\" aria-label=\"example static dataset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example: static dataset</h3>\n<ul>\n<li>\n<p>정적 데이터셋의 data를 분석해 DataFrame을 생성</p>\n<p>이 때 정적 데이터셋의 schema도 함께 생성</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Read static dataset</span>\n\nstaticDataFrame <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"csv\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"inferSchema\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"/data/retail-data/by-day/*.csv\"</span><span class=\"token punctuation\">)</span>\n\nstaticDataFrame<span class=\"token punctuation\">.</span>createOrReplaceTempView<span class=\"token punctuation\">(</span><span class=\"token string\">\"retail_data\"</span><span class=\"token punctuation\">)</span>\nstaticSchema <span class=\"token operator\">=</span> staticDataFrame<span class=\"token punctuation\">.</span>schema\n\nstaticSchema\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\nStructType<span class=\"token punctuation\">(</span>List<span class=\"token punctuation\">(</span>StructField<span class=\"token punctuation\">(</span>InvoiceNo<span class=\"token punctuation\">,</span>StringType<span class=\"token punctuation\">,</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>StructField<span class=\"token punctuation\">(</span>InvoiceDate<span class=\"token punctuation\">,</span>TimestampType<span class=\"token punctuation\">,</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Filter</span>\n\n<span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>functions <span class=\"token keyword\">import</span> window<span class=\"token punctuation\">,</span> col\n\nstaticDataFrame\\\n    <span class=\"token punctuation\">.</span>selectExpr<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"CustomerId\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"(UnitPrice * Quantity) as total_cost\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"InvoiceDate\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>groupBy<span class=\"token punctuation\">(</span>\n    col<span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomerId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">(</span><span class=\"token string\">\"InvoiceDate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1 day\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_cost\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span>CustomerId<span class=\"token operator\">|</span>              window<span class=\"token operator\">|</span>  <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>total_cost<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">16057.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">05</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>            <span class=\"token operator\">-</span><span class=\"token number\">37.6</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">14126.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">29</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span><span class=\"token number\">643.6300000000001</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">13500.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">16</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span><span class=\"token number\">497.9700000000001</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">17160.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">08</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span><span class=\"token number\">516.8499999999999</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">15608.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">11</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>            <span class=\"token number\">122.4</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\nonly showing top <span class=\"token number\">5</span> rows</code></pre></div>\n<br>\n<h3 id=\"example-streaming\" style=\"position:relative;\"><a href=\"#example-streaming\" aria-label=\"example streaming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example: streaming</h3>\n<ul>\n<li><code class=\"language-text\">read</code> method 대신 <code class=\"language-text\">readStream</code> method 사용</li>\n<li>\n<p><code class=\"language-text\">maxFilesPerTrigger</code> 옵션: 한 번에 읽을 파일 수 설정<br>\n아래의 예시를 streaming 답게 만들어 주는 역할이지만, production 환경에서는 적용하는 것을 추천하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Read streaming data</span>\n\nstreamingDataFrame <span class=\"token operator\">=</span> spark<span class=\"token punctuation\">.</span>readStream\\\n    <span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">(</span>staticSchema<span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"maxFilesPerTrigger\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"csv\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\\\n    <span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"/data/retail-data/by-day/*.csv\"</span><span class=\"token punctuation\">)</span>\n\nstreamingDataFrame\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> DataFrame<span class=\"token punctuation\">[</span>InvoiceNo<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">,</span> StockCode<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">,</span> Description<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">,</span> Quantity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> InvoiceDate<span class=\"token punctuation\">:</span> timestamp<span class=\"token punctuation\">,</span> UnitPrice<span class=\"token punctuation\">:</span> double<span class=\"token punctuation\">,</span> CustomerID<span class=\"token punctuation\">:</span> double<span class=\"token punctuation\">,</span> Country<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">]</span>\n\nstreamingDataFrame<span class=\"token punctuation\">.</span>isStreaming\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span></code></pre></div>\n</li>\n<li>\n<p>기존 DataFrame 처리와 동일한 business logic을 적용</p>\n<p>이 작업 역시 lazy operation이므로 data flow를 실행하기 위해 streaming action을 호출해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Filter (same as static example above)</span>\n\npurchaseByCustomerPerHour <span class=\"token operator\">=</span> streamingDataFrame\\\n  <span class=\"token punctuation\">.</span>selectExpr<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"CustomerId\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"(UnitPrice * Quantity) as total_cost\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"InvoiceDate\"</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>groupBy<span class=\"token punctuation\">(</span>\n    col<span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomerId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">(</span><span class=\"token string\">\"InvoiceDate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1 day\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_cost\"</span><span class=\"token punctuation\">)</span>\n\npurchaseByCustomerPerHour<span class=\"token punctuation\">.</span>isStreaming\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span></code></pre></div>\n</li>\n<li>\n<p><strong>Streaming action</strong></p>\n<p>Trigger가 실행된 다음, data를 갱신할 in-memory table에 데이터를 저장</p>\n<p>아래의 예시에서는 파일마다 trigger 실행 (Production 환경에서 사용하는 것은 좋지 않다.)</p>\n<p>Spark는 이전 집계값보다 더 큰 값이 발생한 경우에만 in-memory table을 갱신하므로, 언제나 가장 큰 값을 얻을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Write to in-memory table</span>\n\npurchaseByCustomerPerHour<span class=\"token punctuation\">.</span>writeStream\\\n    <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memory\"</span><span class=\"token punctuation\">)</span>\\                  <span class=\"token comment\"># \"memory\": in-memory table에 저장 (\"console\": 콘솔에 결과 출력)</span>\n    <span class=\"token punctuation\">.</span>queryName<span class=\"token punctuation\">(</span><span class=\"token string\">\"customer_purchases\"</span><span class=\"token punctuation\">)</span>\\   <span class=\"token comment\"># in-memory에 저장될 table name</span>\n    <span class=\"token punctuation\">.</span>outputMode<span class=\"token punctuation\">(</span><span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span>\\            <span class=\"token comment\"># 모든 count 수행 결과를 table에 저장</span>\n    <span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>Stream이 시작되면 쿼리 실행 결과가 어떤 형태로 in-memory table에 기록되는지 확인 가능</p>\n<p>더 많은 data를 읽을수록 (각 파일에 있는 data에 따라) 결과가 변경될 수 있고 변경되지 않을 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">spark<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"\n  SELECT *\n  FROM customer_purchases\n  ORDER BY `sum(total_cost)` DESC\n  \"\"\"</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span>CustomerId<span class=\"token operator\">|</span>              window<span class=\"token operator\">|</span>   <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>total_cost<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">17450.0</span><span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">09</span><span class=\"token operator\">-</span><span class=\"token number\">20</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>          <span class=\"token number\">71601.44</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      null<span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">14</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>          <span class=\"token number\">55316.08</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      null<span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">07</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>          <span class=\"token number\">42939.17</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      null<span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">03</span><span class=\"token operator\">-</span><span class=\"token number\">29</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span> <span class=\"token number\">33521.39999999998</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      null<span class=\"token operator\">|</span><span class=\"token punctuation\">[</span><span class=\"token number\">2011</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">08</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">|</span><span class=\"token number\">31975.590000000007</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\nonly showing top <span class=\"token number\">5</span> rows</code></pre></div>\n</li>\n</ul>\n<br>\n<h1 id=\"machine-learning-and-advanced-analytics\" style=\"position:relative;\"><a href=\"#machine-learning-and-advanced-analytics\" aria-label=\"machine learning and advanced analytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Machine Learning and Advanced Analytics</h1>\n<ul>\n<li>내장된 MLlib을 사용해 대규모 머신러닝을 수행할 수 있다.</li>\n<li>대용량 데이터를 대상으로 Preprocessing, Munging(Wrangling), Model training, Prediction을 할 수 있다.</li>\n<li>Classification, Regression, Clustering, Deep learning에 이르기까지 관련된 API를 제공</li>\n</ul>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<h3 id=\"stringindexer\" style=\"position:relative;\"><a href=\"#stringindexer\" aria-label=\"stringindexer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringIndexer</h3>\n<ul>\n<li>값을 수치형으로 반환 (예를 들어 토요일을 6, 월요일을 1로 반환)</li>\n<li>그러나 번호 지정 체계는 암묵적으로 특정 값이 다른 값보다 더 크다는 것을 의미하게 된다. 이것은 잘못된 방식이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>ml<span class=\"token punctuation\">.</span>feature <span class=\"token keyword\">import</span> StringIndexer\n\nindexer <span class=\"token operator\">=</span> StringIndexer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setInputCol<span class=\"token punctuation\">(</span><span class=\"token string\">\"day_of_week\"</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setOutputCol<span class=\"token punctuation\">(</span><span class=\"token string\">\"day_of_week_index\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"onehotencoder\" style=\"position:relative;\"><a href=\"#onehotencoder\" aria-label=\"onehotencoder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OneHotEncoder</h3>\n<ul>\n<li>위의 StringIndexer의 문제점을 보완하기 위해 사용 가능</li>\n<li>각 값을 자체 column으로 encoding</li>\n<li>특정 data가 해당 값인지 아닌지 boolean type으로 나타낼 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>ml<span class=\"token punctuation\">.</span>feature <span class=\"token keyword\">import</span> OneHotEncoder\n\nencoder <span class=\"token operator\">=</span> OneHotEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setInputCol<span class=\"token punctuation\">(</span><span class=\"token string\">\"day_of_week_index\"</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setOutputCol<span class=\"token punctuation\">(</span><span class=\"token string\">\"day_of_week_encoded\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"vectorassembler\" style=\"position:relative;\"><a href=\"#vectorassembler\" aria-label=\"vectorassembler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VectorAssembler</h3>\n<ul>\n<li>Spark의 모든 ML 알고리즘은 수치형 벡터 타입을 입력으로 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>ml<span class=\"token punctuation\">.</span>feature <span class=\"token keyword\">import</span> VectorAssembler\n\nvectorAssembler <span class=\"token operator\">=</span> VectorAssembler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setInputCols<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"UnitPrice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Quantity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"day_of_week_encoded\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setOutputCol<span class=\"token punctuation\">(</span><span class=\"token string\">\"features\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"pipeline\" style=\"position:relative;\"><a href=\"#pipeline\" aria-label=\"pipeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pipeline</h3>\n<ul>\n<li>위의 3가지 process를 거쳐 input data가 변환되도록 파이프라인 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>ml <span class=\"token keyword\">import</span> Pipeline\n\ntransformationPipeline <span class=\"token operator\">=</span> Pipeline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setStages<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>indexer<span class=\"token punctuation\">,</span> encoder<span class=\"token punctuation\">,</span> vectorAssembler<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"fit\" style=\"position:relative;\"><a href=\"#fit\" aria-label=\"fit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fit</h3>\n<ul>\n<li>Transformer를 dataset에 fit 시켜야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">fittedPipeline <span class=\"token operator\">=</span> transformationPipeline<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>trainDataFrame<span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"transform\" style=\"position:relative;\"><a href=\"#transform\" aria-label=\"transform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transform</h3>\n<ul>\n<li>fitted pipeline을 사용해서 일관되고 반복적인 방식으로 모든 data를 변환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">transformedTraining <span class=\"token operator\">=</span> fittedPipeline<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>trainDataFrame<span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"cache\" style=\"position:relative;\"><a href=\"#cache\" aria-label=\"cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cache</h3>\n<ul>\n<li>caching을 사용하면 중간 변환된 dataset의 복사본을 memory에 저장하므로, 전체 pipeline을 재실행하는 것보다 훨씬 빠르게 반복적으로 dataset에 접근 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">transformedTraining<span class=\"token punctuation\">.</span>cache<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"training-model\" style=\"position:relative;\"><a href=\"#training-model\" aria-label=\"training model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Training model</h3>\n<ul>\n<li>\n<p>Spark에서 머신러닝 모델을 학습시키는 과정은 크게 두 단계로 진행된다.</p>\n<p>첫 번째 단계는 아직 학습되지 않은 모델을 초기화하고, 두 번째 단계는 해당 모델을 학습시킨다.</p>\n<p>MLlib의 DataFrame API에서 제공하는 모든 algorithm은 항상 두 가지 유형으로 구성되어 있으며, 학습 전에는 Algorithm으로 학습 후에는 AlgorithmModel의 명명규칙을 따른다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pyspark<span class=\"token punctuation\">.</span>ml<span class=\"token punctuation\">.</span>clustering <span class=\"token keyword\">import</span> KMeans\n\nkmeans <span class=\"token operator\">=</span> KMeans<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setK<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\\\n  <span class=\"token punctuation\">.</span>setSeed<span class=\"token punctuation\">(</span>1L<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 1L only works in Python 2</span>\n\nkmModel <span class=\"token operator\">=</span> kmeans<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>transformedTraining<span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"compute-cost\" style=\"position:relative;\"><a href=\"#compute-cost\" aria-label=\"compute cost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compute cost</h3>\n<ul>\n<li>Model training이 완료되면, 몇 가지 성과 평가지표에 따라 학습 dataset에 대한 cost를 계산할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">kmModel<span class=\"token punctuation\">.</span>computeCost<span class=\"token punctuation\">(</span>transformedTraining<span class=\"token punctuation\">)</span>\n\ntransformedTest <span class=\"token operator\">=</span> fittedPipeline<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>testDataFrame<span class=\"token punctuation\">)</span>\nkmModel<span class=\"token punctuation\">.</span>computCost<span class=\"token punctuation\">(</span>transformedTest<span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h1 id=\"lower-level-api\" style=\"position:relative;\"><a href=\"#lower-level-api\" aria-label=\"lower level api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lower-Level API</h1>\n<ul>\n<li>Spark는 RDD를 통해 java와 python object를 다루는 데 필요한 다양한 기본 기능(lower-level API)을 제공한다.</li>\n<li>Spark의 거의 모든 기능은 RDD를 기반으로 만들어졌다. (DataFrame 연산도 RDD를 기반으로 만들어졌다.)</li>\n<li>최신 버전의 spark에서는 기본적으로 RDD를 사용하지 않지만, unstructured data나 raw unprocessed data를 처리해야 한다면 RDD를 사용해야 하는 경우도 있다.</li>\n<li>Scala뿐만 아니라 Python에서도 사용할 수 있지만, 언어와 관계없이 동일한 실행 특성을 제공하는 DataFrame API와는 다르게, RDD는 세부 구현 방식에서 언어 간의 차이를 보인다.</li>\n</ul>\n<h3 id=\"example-1\" style=\"position:relative;\"><a href=\"#example-1\" aria-label=\"example 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h3>\n<ul>\n<li>Driver system의 memory에 저장된 row data를 parallelize(병렬처리) 하는 데 사용할 수 있다.</li>\n<li>아래의 예시에서는 병렬처리 후 다른 DataFrame과 함께 사용할 수 있도록 DataFrame으로 변환한다.</li>\n</ul>\n<br>\n<br>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://www.oreilly.com/library/view/spark-the-definitive/9781491912201/\"><em>Spark: The Definitive Guide</em></a>  </p>\n</blockquote>","frontmatter":{"title":"Chapter 3. A Tour of Spark's Toolset","date":"April 23, 2022","category":"[Spark: The Definitive Guide]","thumbnail":null}}},"pageContext":{"slug":"/spark-definitive-guide/03-tour-of-spark-toolset/","previous":{"fields":{"slug":"/spark-definitive-guide/02-gentle-introduction/"},"frontmatter":{"title":"Chapter 2. A Gentle Introduction to Spark","category":"[Spark: The Definitive Guide]","draft":false}},"next":{"fields":{"slug":"/spark-definitive-guide/04-structured-api-overview/"},"frontmatter":{"title":"Chapter 4. Structured API Overview","category":"[Spark: The Definitive Guide]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/f-string/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"89c27918-8d8b-51b3-8a23-343257966057","excerpt":"지난번 python 3.8의 새 기능인 walrus operator에 대해 적었는데,\n이번에는 f-string 관련한 새로운 기능이다. f’{expr=}’ 반쪽만 쓴 것 같지만 새로운 기능이라는 것! python 3.8 이전 버전에서는 f-string을 사용할 때 할당 받을 변수와 input 변수를 다 적어줘야 한다. ➡ name과 age가 두번씩 입력이 된다.  안에 name과 age가 들어가고 도 같이 붙이면, 중복을 없앨 수 있다. ➡ 결과값이 조금 다르게 나오는 이유는 뭘까.. 🤔 f…","html":"<p>지난번 python 3.8의 새 기능인 <a href=\"https://hong-dev.github.io/python/walrus_operator/\">walrus operator</a>에 대해 적었는데,\n이번에는 f-string 관련한 새로운 기능이다.</p>\n<h2 id=\"fexpr\" style=\"position:relative;\"><a href=\"#fexpr\" aria-label=\"fexpr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>f’{expr=}’</h2>\n<ul>\n<li>반쪽만 쓴 것 같지만 새로운 기능이라는 것!</li>\n<li>\n<p>python 3.8 이전 버전에서는 f-string을 사용할 때 할당 받을 변수와 input 변수를 다 적어줘야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Hong'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token string-interpolation\"><span class=\"token string\">f'name=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, age=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'name=Hong, age=20'</span></code></pre></div>\n<p>➡ name과 age가 두번씩 입력이 된다.</p>\n</li>\n</ul>\n<br>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">{}</code> 안에 name과 age가 들어가고 <code class=\"language-text\">=</code>도 같이 붙이면, 중복을 없앨 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">name <span class=\"token operator\">=</span> <span class=\"token string\">'Hong'</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token operator\">=</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token operator\">=</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"name='Hong', age=20\"</span></code></pre></div>\n<p>➡ 결과값이 조금 다르게 나오는 이유는 뭘까.. 🤔</p>\n</li>\n</ul>\n<br>\n<br>\n<ul>\n<li>\n<p>f-string에서 result 값을 수정하기 위해 사용하는 <code class=\"language-text\">:</code>도 역시 사용 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">num <span class=\"token operator\">=</span> <span class=\"token number\">12345.678</span>\n\n<span class=\"token string-interpolation\"><span class=\"token string\">f'num=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num<span class=\"token punctuation\">:</span><span class=\"token format-spec\">,.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'num=12,345.68'</span>\n\n<span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>num<span class=\"token operator\">=</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">,.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'num=12,345.68'</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<ul>\n<li>\n<p>수식을 쓰면 계산된 값과 함께 계산식 전체가 보여진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">=</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'3+5=8'</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Reference</em></h3>\n<blockquote>\n<p><a href=\"https://docs.python.org/ko/3.8/whatsnew/3.8.html#f-strings-support-for-self-documenting-expressions-and-debugging\"><em>f-strings support = for self-documenting expressions and debugging</em></a></p>\n</blockquote>","frontmatter":{"title":"f-string `=` (python 3.8)","date":"September 01, 2020","category":"python","thumbnail":null}}},"pageContext":{"slug":"/python/f-string/","previous":{"fields":{"slug":"/effective-python/item_12/"},"frontmatter":{"title":"Item 12: Avoid Striding and Slicing in a Single Expression","category":"[Effective Python]","draft":false}},"next":{"fields":{"slug":"/effective-python/item_13/"},"frontmatter":{"title":"Item 13: asterisk(*) for unpacking","category":"[Effective Python]","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
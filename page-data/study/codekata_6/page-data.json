{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/codekata_6/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"147dbf41-86b5-54ac-987a-9e785f0a640f","excerpt":"My Solution Python에서는 허수를 가 아닌 로 표현한다. 그래서 i를 j로 바꿔준 뒤,  함수로 복소수로 변환한다. 복소수끼리 계산을 한 후, string으로 변환해서 i와 괄호를 로 변환해서 return 한다. complex( ) : string 형태의 복소수를 넣으면 복소수 type으로 변환한다.  : 숫자 2개를 넣으면 (1+3j)의 복소수 형태로 변환한다.  Model Solution 1 복소수 안에 있는 숫자들만 분리해서 각각을 계산한 후 다시 i를 붙여주는 방식 Model…","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">string으로 받은 복소수(complex number) 2개를 곱해서 string으로 반환하라.\ninput은 항상 a+bi 형태이며, output도 a+bi 형태로 나와야 한다.</code></pre></div>\n<h2 id=\"my-solution\" style=\"position:relative;\"><a href=\"#my-solution\" aria-label=\"my solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution</h2>\n<ul>\n<li>Python에서는 허수를 <code class=\"language-text\">i</code>가 아닌 <code class=\"language-text\">j</code>로 표현한다.<br>\n그래서 i를 j로 바꿔준 뒤, <code class=\"language-text\">complex()</code> 함수로 복소수로 변환한다.</li>\n<li>복소수끼리 계산을 한 후, string으로 변환해서 i와 괄호를 <code class=\"language-text\">replace()</code>로 변환해서 return 한다.</li>\n</ul>\n<h3 id=\"complex-\" style=\"position:relative;\"><a href=\"#complex-\" aria-label=\"complex  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>complex( )</em></h3>\n<ul>\n<li><code class=\"language-text\">complex('1+j')</code>: string 형태의 복소수를 넣으면 복소수 type으로 변환한다.</li>\n<li><code class=\"language-text\">complex(1, 3)</code> : 숫자 2개를 넣으면 (1+3j)의 복소수 형태로 변환한다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">complexNumberMultiply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'+-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> <span class=\"token builtin\">complex</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'+-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    multiple <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span>\n    multiple <span class=\"token operator\">=</span> multiple<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'('</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">')'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>real <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        multiple <span class=\"token operator\">=</span> <span class=\"token string\">'0+'</span> <span class=\"token operator\">+</span> multiple\n    \n    <span class=\"token keyword\">return</span> multiple</code></pre></div>\n<h2 id=\"model-solution-1\" style=\"position:relative;\"><a href=\"#model-solution-1\" aria-label=\"model solution 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution 1</h2>\n<ul>\n<li>복소수 안에 있는 숫자들만 분리해서 각각을 계산한 후 다시 i를 붙여주는 방식</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">complexNumberMultiply</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  firstArr <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\n  a1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>firstArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  a2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>firstArr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  secondArr <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span>\n  b1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>secondArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  b2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>secondArr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a1 <span class=\"token operator\">*</span> b1 <span class=\"token operator\">-</span> a2 <span class=\"token operator\">*</span> b2<span class=\"token punctuation\">}</span></span><span class=\"token string\">+</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a1 <span class=\"token operator\">*</span> b2 <span class=\"token operator\">+</span> a2 <span class=\"token operator\">*</span> b1<span class=\"token punctuation\">}</span></span><span class=\"token string\">i'</span></span></code></pre></div>\n<h2 id=\"model-solution-2\" style=\"position:relative;\"><a href=\"#model-solution-2\" aria-label=\"model solution 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution 2</h2>\n<ul>\n<li><code class=\"language-text\">map()</code>을 사용하여 각각의 변수에 unpack 한다.</li>\n<li>return 할 때는 <code class=\"language-text\">%d</code>를 활용하여 대입하는 방식으로 return 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">complexNumberMultiply2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  a1<span class=\"token punctuation\">,</span> a2 <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  b1<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'%d+%di'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">*</span> b1 <span class=\"token operator\">-</span> a2 <span class=\"token operator\">*</span> b2<span class=\"token punctuation\">,</span> a1 <span class=\"token operator\">*</span> b2 <span class=\"token operator\">+</span> a2 <span class=\"token operator\">*</span> b1<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[CodeKata] 6","date":"February 20, 2020","category":"algorithm","thumbnail":null}}},"pageContext":{"slug":"/study/codekata_6/","previous":{"fields":{"slug":"/error/module_not_found/"},"frontmatter":{"title":"ModuleNotFoundError","category":"error","draft":false}},"next":{"fields":{"slug":"/study/models/"},"frontmatter":{"title":"[Modeling] Django models.py에 적용하기","category":"django","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
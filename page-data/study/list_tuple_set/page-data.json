{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/list_tuple_set/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"48056dba-1df1-52b8-8cee-e48a35555d3a","excerpt":"1. LIST list(); element, element, … mutable; 원본 list를 변경, 수정, 추가가 가능하다. list는 수정이 가능하고 여러 수의 요소들을 저장할 수 있도록 되어 있어서, 차지하는 메모리 용량이 tuple보다 크다. (더 많은 flexibility를 제공하기 때문) 2. TUPLE tuple(); (element, element, …) immutable 일반적으로 2개에서 5개 사이의 요소들을 저장할때 사용 괄호로 묶지 않고 값을 나열해도 tuple…","html":"<h2 id=\"1-list\" style=\"position:relative;\"><a href=\"#1-list\" aria-label=\"1 list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. LIST</h2>\n<ul>\n<li><strong>list(); [element, element, …]</strong></li>\n<li>mutable; 원본 list를 변경, 수정, 추가가 가능하다.</li>\n<li>list는 수정이 가능하고 여러 수의 요소들을 저장할 수 있도록 되어 있어서, 차지하는 메모리 용량이 tuple보다 크다. (더 많은 flexibility를 제공하기 때문)</li>\n</ul>\n<h2 id=\"2-tuple\" style=\"position:relative;\"><a href=\"#2-tuple\" aria-label=\"2 tuple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. TUPLE</h2>\n<ul>\n<li><strong>tuple(); (element, element, …)</strong></li>\n<li>immutable</li>\n<li>일반적으로 2개에서 5개 사이의 요소들을 저장할때 사용</li>\n<li>괄호로 묶지 않고 값을 나열해도 tuple이 됨</li>\n<li>읽기 전용 list</li>\n<li>차지하는 메모리 용량이 list > tuple (기능이 제한적이기 때문)<br>\n수정이 필요없고 간단한 형태의 데이터를 표현할 때는 tuple을 사용하는 게 훨씬 더 효과적이다.</li>\n</ul>\n<h2 id=\"3-set\" style=\"position:relative;\"><a href=\"#3-set\" aria-label=\"3 set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. SET</h2>\n<ul>\n<li><strong>set(); {element, element, …}</strong></li>\n<li>elements의 순서가 없다. ordering이 없다(unordered). indexing도 없다.</li>\n<li>중복된 값을 저장할 수 없다.<br>\n새로 추가하는 요소와 동일한 값의 요소가 존재한다면, 새로운 요소가 이 전 요소를 replace한다.</li>\n</ul>\n<h2 id=\"4-dictionary\" style=\"position:relative;\"><a href=\"#4-dictionary\" aria-label=\"4 dictionary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. DICTIONARY</h2>\n<ul>\n<li><strong>dict(); {“key”: value, “key”: value, …}</strong>: key-value pair</li>\n<li>mutable</li>\n<li>key에는 list와 dictionary** 사용불가. 숫자는 가능</li>\n<li>key값은 중복될 수 없다. 이미 존재하는 key 값이 추가되면 기존의 key 값의 요소를 replace한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">딕셔너리 <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>키<span class=\"token number\">1</span><span class=\"token operator\">=</span>값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 키<span class=\"token number\">2</span><span class=\"token operator\">=</span>값<span class=\"token number\">2</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#여기는 키와 값이 string이어도 \"\"를 안한다.</span>\n딕셔너리 <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>키<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 키<span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n딕셔너리 <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>키<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>키<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#이건 list를 넣은 것인데 tuple을 그냥 넣는 건 안되나?</span>\n딕셔너리 <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>키<span class=\"token number\">1</span><span class=\"token punctuation\">:</span> 값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 키<span class=\"token number\">2</span><span class=\"token punctuation\">:</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"dictionary-사용하기\" style=\"position:relative;\"><a href=\"#dictionary-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"dictionary 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dictionary 사용하기</h3>\n<ol>\n<li>dictionary에서 <code class=\"language-text\">not in</code>, <code class=\"language-text\">in</code>은 key값에만 작동한다.</li>\n<li>value값이 dict에 있는지 확인하려면, <code class=\"language-text\">.values()</code>를 사용</li>\n<li>key-value pair가 있는지 확인하려면, <code class=\"language-text\">.items()</code>를 사용 가능<br>\n단, items()는 (key, value) 형식의 tuple로 return하기 때문에 주의</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">key1 <span class=\"token keyword\">in</span> dict1  <span class=\"token comment\">#1) dict1의 key값에 key1이 있는지 체크</span>\n\nvalue1 <span class=\"token keyword\">in</span> dict1<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#2) dict1의 value값에 value1이 있는지 체크</span>\n\n<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> dict1<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#3) dict1에 key-value pair가 있는지 체크</span></code></pre></div>","frontmatter":{"title":"[Python] list, tuple, set","date":"February 07, 2020","category":"python","thumbnail":null}}},"pageContext":{"slug":"/study/list_tuple_set/","previous":{"fields":{"slug":"/study/list_element_delete/"},"frontmatter":{"title":"[Python] list에서 홀수인 요소들만 삭제","category":"python","draft":false}},"next":{"fields":{"slug":"/study/decorators/"},"frontmatter":{"title":"[Python] Decorators","category":"python","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
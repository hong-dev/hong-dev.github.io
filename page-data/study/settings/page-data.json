{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/settings/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"beb18ce4-ff6e-56dd-8d74-30e85fb164fc","excerpt":"Install Django 1. ubuntu에서 terminal 열기:  전체화면으로 키우기:  2. django 설치 3. django 설치 여부 및 version 확인     *제대로 설치가 되어 있지 않다면, 와 같은 error 발생 Start Project 새로운 가상환경을 만들고, 원하는 directory에서 폴더를 만든다. startproject를 하면 다음과 같은 파일 및 디렉토리가 생성된다. manage.py __init__.py settings.py urls.py asgi.py…","html":"<h2 id=\"install-django\" style=\"position:relative;\"><a href=\"#install-django\" aria-label=\"install django permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Django</h2>\n<p><strong>1.</strong> ubuntu에서 terminal 열기: <code class=\"language-text\">Ctrl + Alt + T</code><br>\n전체화면으로 키우기: <code class=\"language-text\">Window키 + 위쪽화살표</code></p>\n<p>\n<p><strong>2.</strong> django 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> django</code></pre></div>\n<p>\n<p><strong>3.</strong> django 설치 여부 및 version 확인<br>\n*제대로 설치가 되어 있지 않다면, <code class=\"language-text\">No module named django</code>와 같은 error 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python -m django --version</code></pre></div>\n<h2 id=\"start-project\" style=\"position:relative;\"><a href=\"#start-project\" aria-label=\"start project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Start Project</h2>\n<ul>\n<li>새로운 가상환경을 만들고, 원하는 directory에서 폴더를 만든다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ django-admin startproject mysite</code></pre></div>\n<ul>\n<li>\n<p>startproject를 하면 다음과 같은 파일 및 디렉토리가 생성된다.</p>\n<ol>\n<li>manage.py</li>\n<li>__init__.py</li>\n<li>settings.py</li>\n<li>urls.py</li>\n<li>asgi.py</li>\n<li>wsgi.py</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">mysite/  <span class=\"token comment\">#이건 이름 바꿔도 됨. 이 directory는 껍데기일뿐</span>\n    manage.py\n    mysite/  <span class=\"token comment\">#진짜 project 이름과 설정 등등은 다 여기 directory가 한다.</span>\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py</code></pre></div>\n<h4 id=\"생성한-new-django-project가-제대로-작동하는-지-확인\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%ED%95%9C-new-django-project%EA%B0%80-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94-%EC%A7%80-%ED%99%95%EC%9D%B8\" aria-label=\"생성한 new django project가 제대로 작동하는 지 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성한 new django project가 제대로 작동하는 지 확인</h4>\n<p>기본적으로 runserver 명령은 내부 IP의 8000번 포트로 개발 서버를 띄운다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py runserver</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429582-3cb7b200-6e1d-11ea-83c4-77b170fe4978.png\" alt=\"runserver\"></p>\n<p>이런 문구가 뜨면, <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a> 에 접속하여 로켓을 확인한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429581-3c1f1b80-6e1d-11ea-8761-15023b4421ec.png\" alt=\"runserver\"></p>\n<h4 id=\"앱-생성하기\" style=\"position:relative;\"><a href=\"#%EC%95%B1-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"앱 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앱 생성하기</h4>\n<p>manage.py가 존재하는 디렉토리인 mysite에서 polls app을 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py startapp polls</code></pre></div>\n<p>생성된 polls 디렉토리의 구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#현재 프로젝트 폴더</span>\n\nfirstproject/  <span class=\"token comment\">#하위 폴더 중 같은 이름의 폴더가 자동으로 생성되므로(mysite), 이름 바꿔도 됨</span>\n    manage.py\n\n    polls/  <span class=\"token comment\">#startapp으로 생성</span>\n            __init__.py\n            admin.py\n            apps.py\n            migrations/\n                __init__.py\n            models.py\n            tests.py\n            views.py  <span class=\"token comment\">#결과를 실행할 함수들이 들어있음. request는 ip</span>\n                **urls.py**  <span class=\"token comment\">#새로 생성한 파일. path가 view의 함수를 실행하도록 만듦.</span>\n\n    mysite/  <span class=\"token comment\">#startproject으로 생성</span>\n        __init__.py\n        settings.py\n        urls.py  <span class=\"token comment\">#최상위 URLconf에서 polls.urls 모듈을 바라보게 설정</span>\n        asgi.py\n        wsgi.py</code></pre></div>\n<ul>\n<li><strong>‘view.py’</strong>는 로직을 담당하는 파일. 가장 많이 다루게 될 파일<br>\nclass나 function 정의하고, request를 받아서 return 값을 준다.</li>\n<li><strong>‘migrations 디렉토리’</strong>는 models.py 파일에 정의한 테이블 구조를 manage.py의 makemigrations 옵션을 통해 생성되는 파일이 저장되는 디렉토리</li>\n<li><strong>‘models.py’</strong>는 장고의 핵심 기능중 하나인 ORM과 관련되어 있는 파일. 단순하게는 데이터베이스의 테이블을 정의하는 파일</li>\n<li><strong>‘settings.py’</strong>는 프로젝트 관련 모든 설정 정보를 담고 있는 파일</li>\n<li><strong>‘urls.py’</strong>는 url 경로에 대한 부분</li>\n</ul>\n<p>*django는 URLconf(URL configuration)을 사용하는데, URLconf는 django에서 URL과 일치하는 뷰를 찾기 위한 패턴들의 집합이다.</p>\n<h2 id=\"path-pathroute-view-kwargs-name\" style=\"position:relative;\"><a href=\"#path-pathroute-view-kwargs-name\" aria-label=\"path pathroute view kwargs name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path(); path(route, view, kwargs, name)</h2>\n<p><code class=\"language-text\">route</code> : URL 패턴을 가진 문자열</p>\n<p><code class=\"language-text\">view</code> : django에서 일치하는 패턴을 찾으면, 경로로부터 캡처된 값을 키워드 인수로 하여 특정한 view 함수를 호출한다.</p>\n<p><code class=\"language-text\">kwargs</code> : 임의의 키워드 인수들은 목표한 view에 사전형으로 전달된다.</p>\n<p><code class=\"language-text\">name</code> : URL에 이름을 부여</p>\n<ul>\n<li>path()는 길고 긴 URL 중에서 route가 들어있으면, view를 실행하도록 한다.<br>\n아래의 예시에서, <code class=\"language-text\">admin/</code> 이 있으면 <code class=\"language-text\">admin.site.urls</code>가 실행되고, <code class=\"language-text\">polls/</code> 가 있으면 <code class=\"language-text\">include('polls.urls')</code>가 실행된다.</li>\n</ul>\n<h2 id=\"include\" style=\"position:relative;\"><a href=\"#include\" aria-label=\"include permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>include()</h2>\n<ul>\n<li>URL의 그 시점까지 일치하는 부분을 잘라내고, 그 후의 문자열 부분을 처리하기 위해 include 된 url 파일 경로에 전달하여 참조하게 한다.</li>\n<li>아래의 예시에서, <code class=\"language-text\">path('polls/', include('polls.urls'))</code> 코드는 <code class=\"language-text\">path/</code> 까지 <code class=\"language-text\">mysite/urls.py</code> 파일에서 해석하고, <code class=\"language-text\">include('polls.ulrs')</code> 함수를 통해서 그 다음 url 부분을 <code class=\"language-text\">polls</code> 디렉토리 아래의 <code class=\"language-text\">urls.py</code> 모듈에서 해석할 수 있게 된다.</li>\n<li>다른 URL 패턴을 포함할 때마다 항상 include()를 사용해야 한다. <code class=\"language-text\">admin.site.urls</code>가 유일한 예외다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#mysite/urls.py</span>\n\nfrom django.contrib <span class=\"token function\">import</span> admin\nfrom django.urls <span class=\"token function\">import</span> include, path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'polls/'</span>, include<span class=\"token punctuation\">(</span><span class=\"token string\">'polls.urls'</span><span class=\"token punctuation\">))</span>,\n            <span class=\"token comment\">#각각의 app.urls.py에서 입력한 url path를 참조할 수 있게 한다.</span>\n            <span class=\"token comment\">#그리고 각 app.urls.py에서는 또다시 app.views.py에 입력된 함수값을 실행하게 한다.</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span>, admin.site.urls<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">#기본 default값</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"프로젝트명settingspy-내용\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%AA%85settingspy-%EB%82%B4%EC%9A%A9\" aria-label=\"프로젝트명settingspy 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트명/settings.py 내용</h2>\n<h3 id=\"installed_apps\" style=\"position:relative;\"><a href=\"#installed_apps\" aria-label=\"installed_apps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INSTALLED_APPS</h3>\n<p>현재 django 인스턴스에서 활성화된 모든 django 어플리케이션들의 이름이 담겨 있다. 앱들은 다수의프로젝트에서 사용될 수 있고, 다른 프로젝트에서 쉽게 사용될 수 있도록 패키징하여 배포할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">django.contrib.admin; 관리용 사이트\ndjango.contrib.auth; 인증 시스템\ndjango.contrib.contenttypes; 컨텐츠 타입을 위한 프레임워크\ndjango.contrib.sessions; 세션 프레임워크\ndjango.contrib.messages; 메세징 프레임워크\ndjango.contrib.staticfiles; 정적 파일을 관리하는 프레임워크</code></pre></div>\n<h2 id=\"migrate\" style=\"position:relative;\"><a href=\"#migrate\" aria-label=\"migrate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>migrate</h2>\n<ul>\n<li>위와 같은 기본 어플리케이션들 중 몇몇은 최소한 하나 이상의 database table을 사용하는데, 그러기 위해서는 database에서 table을 미리 만들 필요가 있다.</li>\n<li>migrate는 INSTALLED_APPS setting을 보고 필요한 database table을 만들어준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#firstproject; 가장 상위의 directory에서 입력</span>\n\n$ python manage.py migrate</code></pre></div>\n<ul>\n<li>실행하면, 각각의 migration들이 적용되었다는 메시지가 나타난다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429573-3aedee80-6e1d-11ea-9f65-603b99f837a2.png\" alt=\"migration\"></p>\n<ul>\n<li>migrate 명령은 INSTALLED_APPS에 등록된 어플리케이션에 한하여 실행된다.<br>\n필요없는 어플리케이션은 installed_apps에서 주석처리(comment-out)하거나 삭제하면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Reference:\n- https://docs.djangoproject.com/ko/3.0/intro/tutorial01/\n- https://suwoni-codelab.com/django/2018/03/24/Django-Url-function/</code></pre></div>","frontmatter":{"title":"[Django] App(1); 초기세팅","date":"February 13, 2020","category":"django","thumbnail":null}}},"pageContext":{"slug":"/study/settings/","previous":{"fields":{"slug":"/study/longest_word/"},"frontmatter":{"title":"[Python] find longest word","category":"python","draft":false}},"next":{"fields":{"slug":"/study/model_migrate/"},"frontmatter":{"title":"[Django] App(2); Model, migrate","category":"django","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/codekata_2/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"619d24b8-06d7-5953-a960-d86046d3c5c3","excerpt":"My Solution1 python list slicing :  받은 숫자를 string으로 바꿔서, slicing을 활용하여 거꾸로 나열한 후 비교한다. My Solution2 for문도 써보기로 했다. 빈 list를 만들고, string화 된 num 값을 하나씩 돌려서 맨 앞부분에 insert 한다. list를 join method로 string으로 변환한 후 비교한다. list.insert(index, element) list에 element를 추가하고 싶을 때, 넣고 싶은 자리의 index…","html":"<p>\n<div style=\"background-color:PowderBlue\">\n숫자인 num을 인자로 넘겨주면, 뒤집은 모양이 num과 똑같은지 True/False로 반환하라.\n</div>\n<h3 id=\"my-solution1\" style=\"position:relative;\"><a href=\"#my-solution1\" aria-label=\"my solution1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution1</h3>\n<ul>\n<li>python list slicing : <code class=\"language-text\">list[start_index:end_index:step]</code></li>\n<li>받은 숫자를 string으로 바꿔서, slicing을 활용하여 거꾸로 나열한 후 비교한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">same_reverse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"my-solution2\" style=\"position:relative;\"><a href=\"#my-solution2\" aria-label=\"my solution2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution2</h3>\n<ul>\n<li>for문도 써보기로 했다.</li>\n<li>빈 list를 만들고, string화 된 num 값을 하나씩 돌려서 맨 앞부분에 insert 한다.<br>\nlist를 join method로 string으로 변환한 후 비교한다.</li>\n</ul>\n<h4 id=\"listinsertindex-element\" style=\"position:relative;\"><a href=\"#listinsertindex-element\" aria-label=\"listinsertindex element permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>list.insert(index, element)</em></h4>\n<p>list에 element를 추가하고 싶을 때, 넣고 싶은 자리의 index를 적고, 값을 넣는다.</p>\n<h4 id=\"betweenjoinlist\" style=\"position:relative;\"><a href=\"#betweenjoinlist\" aria-label=\"betweenjoinlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>‘between’.join(list)</em></h4>\n<p>list의 element들을 차례대로 붙여서 string을 만든다.<br>\nelement 사이사이에 넣고 싶은 값을 앞에 붙이면 element 사이를 구분할 수 있다.<br>\n<code class=\"language-text\">''.join(list)</code> : 공백 없이 차례대로 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">same_reverse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    reversed_num <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      reversed_num<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>reversed_num<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<h3 id=\"model-solution\" style=\"position:relative;\"><a href=\"#model-solution\" aria-label=\"model solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution</h3>\n<ul>\n<li>for문을 돌릴 때 string화 된 num 길이의 반만큼만 돌린다.<br>\n맨 앞과 맨 뒤부터 차례대로 안쪽으로 들어오면서 비교한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">same_reverse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  \tnum <span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n   \tis_palindrome <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n   \t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   \t\t<span class=\"token keyword\">if</span> num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> num<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n   \t\t\tis_palindrome <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    \t\t\t\n   \t<span class=\"token keyword\">return</span> is_palindrome</code></pre></div>","frontmatter":{"title":"[CodeKata] 2","date":"February 13, 2020","category":"algorithm","thumbnail":null}}},"pageContext":{"slug":"/study/codekata_2/","previous":{"fields":{"slug":"/study/model_migrate/"},"frontmatter":{"title":"[Django] App(2); Model, migrate","category":"django","draft":false}},"next":{"fields":{"slug":"/study/endpoint_1/"},"frontmatter":{"title":"[Django] Create Endpoint(1); sign-up, log-in, comments","category":"django","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
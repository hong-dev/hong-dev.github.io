{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/model_migrate/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c583a279-7ebe-5bcf-b015-e9379ee7fd0b","excerpt":"views.py 엔드포인트 뷰를 꾸릴 때 항상 사용하게 되는 대표적인 요소들 json은 json 데이터를 처리하기 위해 import 한다. JSON(JavaScript Object Notation)은 인터넷에서 자료를 주고받을때 널리쓰이는 데이터타입 View 클래스는 직접 생성하지 않고 장고 프레임워크에 내장된 클래스를 상속받아 쓴다. JsonResponse는 서버의 요청에 대한 응답을 Json으로 응답하기 위해 사용한다. MainView 클래스는 View 클래스의 서브클래스. View…","html":"<p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#현재 프로젝트 폴더</span>\n    \nfirstproject/  <span class=\"token comment\">#하위 폴더 중 같은 이름의 폴더가 자동으로 생성되므로(mysite), 이름 바꿔도 됨</span>\n    manage.py\n\n    polls/  <span class=\"token comment\">#startapp으로 생성</span>\n            __init__.py\n            admin.py\n            apps.py  <span class=\"token comment\">#PollsConfig 함수가 기본적으로 입력되어 있다.</span>\n                                    <span class=\"token comment\">#이 함수 경로를 settings.py의 installed_apps에 추가해서 앱을 포함시킨다</span>\n            migrations/\n                __init__.py\n            models.py\n            tests.py\n            views.py  <span class=\"token comment\">#결과를 실행할 함수들이 들어있음. request는 ip</span>\n                urls.py  <span class=\"token comment\">#새로 생성한 파일. path가 view의 함수를 실행하도록 만듦.</span>\n\n    mysite/  <span class=\"token comment\">#startproject으로 생성</span>\n        __init__.py\n        settings.py\n        urls.py  <span class=\"token comment\">#최상위 URLconf에서 polls.urls 모듈을 바라보게 설정</span>\n        asgi.py\n        wsgi.py</code></pre></div>\n<h2 id=\"viewspy\" style=\"position:relative;\"><a href=\"#viewspy\" aria-label=\"viewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>views.py</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> json\nfrom django.views <span class=\"token function\">import</span> View\nfrom django.http <span class=\"token function\">import</span> JsonResponse\n\nclass MainView<span class=\"token punctuation\">(</span>View<span class=\"token punctuation\">)</span>:\n    def get<span class=\"token punctuation\">(</span>self, request<span class=\"token punctuation\">)</span>:\n        <span class=\"token builtin class-name\">return</span> JsonResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Hello\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">}</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"엔드포인트-뷰를-꾸릴-때-항상-사용하게-되는-대표적인-요소들\" style=\"position:relative;\"><a href=\"#%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8-%EB%B7%B0%EB%A5%BC-%EA%BE%B8%EB%A6%B4-%EB%95%8C-%ED%95%AD%EC%83%81-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B2%8C-%EB%90%98%EB%8A%94-%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%9A%94%EC%86%8C%EB%93%A4\" aria-label=\"엔드포인트 뷰를 꾸릴 때 항상 사용하게 되는 대표적인 요소들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[엔드포인트 뷰를 꾸릴 때 항상 사용하게 되는 대표적인 요소들]</h4>\n<ol>\n<li><strong>json</strong>은 json 데이터를 처리하기 위해 import 한다.<br>\nJSON(JavaScript Object Notation)은 인터넷에서 자료를 주고받을때 널리쓰이는 데이터타입</li>\n<li><strong>View 클래스</strong>는 직접 생성하지 않고 장고 프레임워크에 내장된 클래스를 상속받아 쓴다.</li>\n<li><strong>JsonResponse</strong>는 서버의 요청에 대한 응답을 Json으로 응답하기 위해 사용한다.</li>\n</ol>\n<h5 id=\"mainview-클래스는-view-클래스의-서브클래스\" style=\"position:relative;\"><a href=\"#mainview-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%8A%94-view-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%84%9C%EB%B8%8C%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"mainview 클래스는 view 클래스의 서브클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MainView 클래스는 View 클래스의 서브클래스.</h5>\n<p>View 클래스의 속성 및 메소드까지 다 상속 받아서 사용가능하다.<br>\n원래 존재하는 메소드인데 서브클래스에서 새로 정의할 경우에는 덮어씌우기가 된다.</p>\n<h2 id=\"urlspy\" style=\"position:relative;\"><a href=\"#urlspy\" aria-label=\"urlspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>urls.py</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">from django.urls <span class=\"token function\">import</span> path\nfrom main.views  <span class=\"token function\">import</span> MainView\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span>, MainView.as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>path는 장고에서 url 경로를 처리하기 위한 모듈</li>\n<li>views.py에서 작성한 MainView 클래스를 import</li>\n<li>장고에서 경로를 명시할 때 항상 ‘urlpatterns’와 같은 리스트 안에 경로를 저장하고 읽어 들인다.무조건 ‘urlpatterns’라는 이름으로 쓰는 게 규칙이며, 다르게 쓰면 에러가 난다.</li>\n<li>MainView 클래스에 내장된 as_view() 함수를 실행<br>\nas_view() 메소드는 현재 주소인 나를 호출하면 그 호출을 한 http 메소드가 GET인지 POST인지 DELETE인지 UPDATE인지 등을 판별해서 그에 맞는 함수를 실행시켜준다.<br>\nhttp method는 http 통신과 관련된 것이고, views.py에 존재한다.<br>\n겉으로 보이지는 않지만 장고에 내재되어 있는 method이다.</li>\n</ul>\n<h3 id=\"httpie\" style=\"position:relative;\"><a href=\"#httpie\" aria-label=\"httpie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Httpie</h3>\n<ul>\n<li>Http 메소드를 전송할 수 있는 프로그램</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#설치방법 Ubuntu</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> httpie\n\n<span class=\"token comment\">#설치방법 Mac</span>\nbrew <span class=\"token function\">install</span> httpie</code></pre></div>\n<h3 id=\"orm\" style=\"position:relative;\"><a href=\"#orm\" aria-label=\"orm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM</h3>\n<ul>\n<li>\n<p>장고는 별도로 DB를 설치하지 않아도 <code class=\"language-text\">SQLite3</code>라는 경량화 된 DB를 제공한다. 그리고 이를 컨트롤 하기 위해 <code class=\"language-text\">ORM</code>을 제공한다.</p>\n<p>Object Relational Mapping, ORM을 통해 객체 간의 관계를 바탕으로 SQL을 자동으로 생성하여 불일치를 해결한다.\n데이터베이스 데이터 &#x3C;—매핑—> Object 필드 객체를 통해 간접적으로 데이터베이스 데이터를 다룬다.</p>\n<p>ORM을 사용하면서 원하는 모델을 작성하고 다루는 곳이 models.py 파일. DATABASE를  잘 몰라도 models.py 를 통해 DB를 관리할 수 있다.</p>\n</li>\n</ul>\n<h2 id=\"model-만들기\" style=\"position:relative;\"><a href=\"#model-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"model 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model 만들기</h2>\n<ul>\n<li>\n<p>model이란: 부가적인 메타데이터를 가진 데이터베이스의 구조(layout)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Metadata]\n\ndata에 대한 data. 속성정보\ndata를 표현하기 위한 목적(ex.HTML)과 data를 빨리 찾기 위한 목적으로 주로 사용\ndatabase에서는 data의 index구실을 하므로, data를 빨리 찾을 수 있다.</code></pre></div>\n</li>\n<li>저장하는 데이터의 필수적인 필드들과 동작들을 포함하고 있다.<br>\n데이터 모델을 한 곳에서 정의하고, 이것으로부터 자동으로 뭔가를 유도하는 것이 목표</li>\n<li>\n<p>Django는 DRY 원칙을 따른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[DRY 원칙]: 반복하지 말 것\n고유한 개념 및 데이터는 단 한 번, 단 한 곳에 존재하는 것으로 족한다.\n중복성은 나쁜 것, 정규화는 좋은 것\nDjango는 이 원칙에 따라 최소한의 것들을 가지고 최대한의 것을 만들어내도록 한다.</code></pre></div>\n</li>\n<li>\n<p>Database의 각 필드는 Field 클래스의 인스턴스로서 표현된다.</p>\n<ol>\n<li><code class=\"language-text\">class CharField(max_length=None, **options)</code>:<br>\n문자(character) 필드를 표현. 각 필드가 어떤 자료형을 가질 수 있는지 django에게 말해준다.</li>\n<li><code class=\"language-text\">class DateTimeField(auto_now=False, auto_now_add=False, **options)</code>:<br>\n날짜와 시간(datetime) 필드를 표현. 각 필드가 어떤 자료형을 가질 수 있는지 django에게 말해준다.</li>\n<li><code class=\"language-text\">class ForeignKey(to, on_delete, **options)</code>: 관계설정<br>\n<code class=\"language-text\">to</code>; model과 연관되는 class명\n<code class=\"language-text\">on_delete=models.CASCADE</code>; ForeignKey가 바라보는 값이 삭제될 때, ForeignKey를 포함하는 model instance(row)도 삭제된다.</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#polls/models.py</span>\n\nfrom django.db <span class=\"token function\">import</span> models\n\n\nclass Question<span class=\"token punctuation\">(</span>models.Model<span class=\"token punctuation\">)</span>:\n    question_text <span class=\"token operator\">=</span> models.CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token comment\">#question_text;이게 필드이며, database의 column명으로 사용된다.</span>\n                                <span class=\"token comment\">#아니그럼... CharField 이건 뭐야? 다 field라고 붙는데??</span>\n    pub_date <span class=\"token operator\">=</span> models.DateTimeField<span class=\"token punctuation\">(</span><span class=\"token string\">'date published'</span><span class=\"token punctuation\">)</span>\n\n\nclass Choice<span class=\"token punctuation\">(</span>models.Model<span class=\"token punctuation\">)</span>:\n    question <span class=\"token operator\">=</span> models.ForeignKey<span class=\"token punctuation\">(</span>Question, <span class=\"token assign-left variable\">on_delete</span><span class=\"token operator\">=</span>models.CASCADE<span class=\"token punctuation\">)</span>\n    choice_text <span class=\"token operator\">=</span> models.CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    votes <span class=\"token operator\">=</span> models.IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>model에 입력된 정보를 가지고 django는:</p>\n<ol>\n<li>이 앱을 위한 database schema 생성(CREATE TABLE 문)</li>\n<li>Question과 Choice 객체에 접근하기 위한 Python database 접근 API 생성</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"django에게-app이-포함된-것을-알게-하기\" style=\"position:relative;\"><a href=\"#django%EC%97%90%EA%B2%8C-app%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-%EA%B2%83%EC%9D%84-%EC%95%8C%EA%B2%8C-%ED%95%98%EA%B8%B0\" aria-label=\"django에게 app이 포함된 것을 알게 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django에게 app이 포함된 것을 알게 하기</h2>\n<ul>\n<li>polls/apps.py의 PollsConfig 함수를 settings.py에 추가해준다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#mysite/settings.py</span>\n\nINSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'polls.apps.PollsConfig'</span>,\n    <span class=\"token string\">'django.contrib.admin'</span>,\n    <span class=\"token string\">'django.contrib.auth'</span>,\n    <span class=\"token string\">'django.contrib.contenttypes'</span>,\n    <span class=\"token string\">'django.contrib.sessions'</span>,\n    <span class=\"token string\">'django.contrib.messages'</span>,\n    <span class=\"token string\">'django.contrib.staticfiles'</span>,\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"modelspy를-변경시킨-후-적용하기\" style=\"position:relative;\"><a href=\"#modelspy%EB%A5%BC-%EB%B3%80%EA%B2%BD%EC%8B%9C%ED%82%A8-%ED%9B%84-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"modelspy를 변경시킨 후 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>models.py를 변경시킨 후 적용하기</h2>\n<h3 id=\"1-migrations를-만들고-틀table-만들기\" style=\"position:relative;\"><a href=\"#1-migrations%EB%A5%BC-%EB%A7%8C%EB%93%A4%EA%B3%A0-%ED%8B%80table-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1 migrations를 만들고 틀table 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) migrations를 만들고; 틀(table) 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#firstproject; 가장 상위의 directory에서 입력</span>\n\n$ python manage.py makemigrations polls</code></pre></div>\n<ul>\n<li>model을 생성했거나 변경했다고 알려주고, 이 변경사항을 migration으로 저장하겠다는 것을 django에게 알려준다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429274-bd29e300-6e1c-11ea-9b25-d68f84816504.png\" alt=\"migrations\"></p>\n<h3 id=\"2-migrate를-해준다-실제로-실행\" style=\"position:relative;\"><a href=\"#2-migrate%EB%A5%BC-%ED%95%B4%EC%A4%80%EB%8B%A4-%EC%8B%A4%EC%A0%9C%EB%A1%9C-%EC%8B%A4%ED%96%89\" aria-label=\"2 migrate를 해준다 실제로 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) migrate를 해준다; 실제로 실행</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#firstproject; 가장 상위의 directory에서 입력</span>\n\n$ python manage.py sqlmigrate polls 0001\n                                <span class=\"token comment\">#이건 실제로 run the migration 하는 게 아니라 보여주기만 하는 것</span>\n\n$ python manage.py migrate  <span class=\"token comment\">#초기 세팅할 때 했던 명령과 같다.</span></code></pre></div>\n<ul>\n<li>아직 적용되지 않은 migrations를 모두 수집해 실행한다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429273-bc914c80-6e1c-11ea-8914-be9deeb46a8e.png\" alt=\"migrations\"></p>\n<h3 id=\"makemigrations와-migrate의-차이\" style=\"position:relative;\"><a href=\"#makemigrations%EC%99%80-migrate%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"makemigrations와 migrate의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>makemigrations와 migrate의 차이</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">makemigrations</code></p>\n<p>-models.py에서 생성, 변경한 내용으로 테이블의 틀을 만들어 놓는다.<br>\n-테이블 모양과 구조 등만 잡아줄 뿐 실제로 테이블이 생기는 것은 아니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">migrate</code></p>\n<p>-makemigrations만 한다고 테이블이 생기는 게 아니다.<br>\n-migrations를 실행(run)해서 실제 database query에 날려서 data를 저장하고 테이블을 만드는 명령어.<br>\n-model에서의 변경 사항들과 database schema의 동기화가 이루어진다.</p>\n</li>\n</ul>\n<h5 id=\"요약-model-생성-및-변경-순서\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD-model-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EB%B3%80%EA%B2%BD-%EC%88%9C%EC%84%9C\" aria-label=\"요약 model 생성 및 변경 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[요약] model 생성 및 변경 순서</h5>\n<ol>\n<li><code class=\"language-text\">app_name.models.py</code>에서 model을 생성 및 변경한다.</li>\n<li><code class=\"language-text\">python manage.py makemigrations</code>로 이 변경사항에 대한 migration을 만든다.</li>\n<li><code class=\"language-text\">python manage.py migrate</code>로 변경사항을 database에 적용한다.</li>\n</ol>\n<h2 id=\"shell\" style=\"position:relative;\"><a href=\"#shell\" aria-label=\"shell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shell</h2>\n<ul>\n<li>대화식 python shell</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py shell</code></pre></div>\n<h2 id=\"개발-서버-동작시키기\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EB%8F%99%EC%9E%91%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"개발 서버 동작시키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버 동작시키기</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    $ python manage.py runserver</code></pre></div>\n<h2 id=\"관리자-생성하기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"관리자 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 생성하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    $ python manage.py createsuperuser</code></pre></div>\n<h2 id=\"requestpost\" style=\"position:relative;\"><a href=\"#requestpost\" aria-label=\"requestpost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>request.POST</h2>\n<ul>\n<li>키로 전송된 자료에 접근할 수 있도록 해주는 사전과 같은 객체</li>\n<li>request.POST의 값은 항상 문자열</li>\n</ul>\n<h2 id=\"date-class-관련\" style=\"position:relative;\"><a href=\"#date-class-%EA%B4%80%EB%A0%A8\" aria-label=\"date class 관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>date class 관련</h2>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429272-bbf8b600-6e1c-11ea-8379-069de6af2f00.png\" alt=\"date\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77429270-bac78900-6e1c-11ea-9a0e-7c43f1bb4904.png\" alt=\"date2\"></p>\n<p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Reference:\n- https://docs.djangoproject.com/ko/3.0/intro/tutorial02/\n- https://docs.djangoproject.com/ko/3.0/misc/design-philosophies/#dry\n- https://lee-seul.github.io/django/backend/2018/01/28/django-model-on-delete.html</code></pre></div>","frontmatter":{"title":"[Django] App(2); Model, migrate","date":"February 13, 2020","category":"django","thumbnail":null}}},"pageContext":{"slug":"/study/model_migrate/","previous":{"fields":{"slug":"/study/settings/"},"frontmatter":{"title":"[Django] App(1); 초기세팅","category":"django","draft":false}},"next":{"fields":{"slug":"/study/codekata_2/"},"frontmatter":{"title":"[CodeKata] 2","category":"algorithm","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
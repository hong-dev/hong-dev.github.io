{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/codekata_3/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0be5016f-0e98-5c01-922c-40c01869b3a1","excerpt":"My Solution 한글자로 의미가 있는 문자열들과, 두개가 합쳐졌을 때 다른 의미를 가지는 문자열들을 따로 dictionary로 만들었다. 두글자의 문자열들을 먼저 치환하고, 한글자 문자열들을 치환하여 값을 도출했다. 한번에 두가지를 동시에 하지는 못하고, for문을 2번 돌릴 수 밖에 없었다. Model Solution 함수 안에 함수가 또 돌아가게 만들어서 for문 대신 활용하였다! 문자를 앞에서부터 2개씩 끊어서 해당하면 치환하고, 그 다음 문자열부터 같은 함수에 넣어서 return…","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Q: 로마자를 숫자로 바꾸기</code></pre></div>\n<h3 id=\"my-solution\" style=\"position:relative;\"><a href=\"#my-solution\" aria-label=\"my solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution</h3>\n<ul>\n<li>한글자로 의미가 있는 문자열들과, 두개가 합쳐졌을 때 다른 의미를 가지는 문자열들을 따로 dictionary로 만들었다.</li>\n<li>두글자의 문자열들을 먼저 치환하고, 한글자 문자열들을 치환하여 값을 도출했다.</li>\n<li>한번에 두가지를 동시에 하지는 못하고, for문을 2번 돌릴 수 밖에 없었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">roman_to_num</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    string_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">}</span>\n    string_dict2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'IV'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'IX'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'XL'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'XC'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CD'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CM'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">900</span><span class=\"token punctuation\">}</span>\n    \n    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    new_string <span class=\"token operator\">=</span> string\n\n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        str_sub <span class=\"token operator\">=</span> string<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> string<span class=\"token punctuation\">[</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> str_sub <span class=\"token keyword\">in</span> string_dict2<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">+=</span> string_dict2<span class=\"token punctuation\">[</span>str_sub<span class=\"token punctuation\">]</span>\n            new_string <span class=\"token operator\">=</span> new_string<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>str_sub<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> new_string<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token keyword\">in</span> string_dict<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result <span class=\"token operator\">+=</span> string_dict<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span>\n        \n    <span class=\"token keyword\">return</span> result</code></pre></div>\n<h3 id=\"model-solution\" style=\"position:relative;\"><a href=\"#model-solution\" aria-label=\"model solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution</h3>\n<ul>\n<li>함수 안에 함수가 또 돌아가게 만들어서 for문 대신 활용하였다!</li>\n<li>문자를 앞에서부터 2개씩 끊어서 해당하면 치환하고, 그 다음 문자열부터 같은 함수에 넣어서 return</li>\n<li>2개씩 끊은 문자열이 해당되지 않는다면, 1개의 문자를 치환하고 그 다음 문자열부터 함수에 넣어서 return</li>\n</ul>\n<p>\n<p>전혀 생각지도 못한 solution이었다.<br>\n<strong>함수 안에 함수를 또 실행</strong>시킨다는 생각을 왜 못 했을까?!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"I\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"IV\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"V\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"IX\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"X\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"XL\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"L\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"XC\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"CD\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"D\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"CM\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">900</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">roman_to_num</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> string<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> numbers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> numbers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> roman_to_num<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>  numbers<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> roman_to_num<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[Codekata] 3","date":"February 17, 2020","category":"algorithm","thumbnail":null}}},"pageContext":{"slug":"/study/codekata_3/","previous":{"fields":{"slug":"/study/backend/"},"frontmatter":{"title":"Backend","category":"concepts","draft":false}},"next":{"fields":{"slug":"/study/http/"},"frontmatter":{"title":"[Web] HTTP","category":"concepts","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
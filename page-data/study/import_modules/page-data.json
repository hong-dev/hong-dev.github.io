{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/import_modules/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"15a962cd-1a18-522c-a36c-a0ba36daeb64","excerpt":"Import 할 때 파이썬이 모듈이나 패키지 찾는 순서 import를 할 경우, python은 다음의 순서대로 file(module)이나 directory(package)를 찾는다.    sys.path에서도 못 찾으면 를 return한다. sys.modules python이 module이나 package를 찾기 위해 가장 먼저 확인하는 곳 단순한 dictionary이며, 한번이라도 이미 import된 module과 package들을 저장하고 있다. 그러므로 새로 import 하는 module…","html":"<h2 id=\"import-할-때-파이썬이-모듈이나-패키지-찾는-순서\" style=\"position:relative;\"><a href=\"#import-%ED%95%A0-%EB%95%8C-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%B4-%EB%AA%A8%EB%93%88%EC%9D%B4%EB%82%98-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%B0%BE%EB%8A%94-%EC%88%9C%EC%84%9C\" aria-label=\"import 할 때 파이썬이 모듈이나 패키지 찾는 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import 할 때 파이썬이 모듈이나 패키지 찾는 순서</h2>\n<ul>\n<li>\n<p>import를 할 경우, python은 다음의 순서대로 file(module)이나 directory(package)를 찾는다.</p>\n<ol>\n<li><code class=\"language-text\">sys.modules</code></li>\n<li><code class=\"language-text\">built-in modules</code></li>\n<li><code class=\"language-text\">sys.path</code></li>\n<li>sys.path에서도 못 찾으면 <code class=\"language-text\">ModuleNotFoundError</code>를 return한다.</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"sysmodules\" style=\"position:relative;\"><a href=\"#sysmodules\" aria-label=\"sysmodules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sys.modules</h3>\n<ul>\n<li>python이 module이나 package를 찾기 위해 가장 먼저 확인하는 곳</li>\n<li>단순한 <strong>dictionary</strong>이며, 한번이라도 이미 import된 module과 package들을 저장하고 있다.<br>\n그러므로 새로 import 하는 module은 sys.modules에서 찾을 수 없다.</li>\n</ul>\n<h3 id=\"built-in-modules\" style=\"position:relative;\"><a href=\"#built-in-modules\" aria-label=\"built in modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>built-in modules</h3>\n<ul>\n<li>python에서 제공하는 파이썬 공식 라이브러리들</li>\n<li>이미 python에 포함되어 나오므로 python이 쉽게 찾을 수 있다.</li>\n</ul>\n<h3 id=\"syspath\" style=\"position:relative;\"><a href=\"#syspath\" aria-label=\"syspath permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sys.path</h3>\n<ul>\n<li>기본적으로 <strong>list</strong>이며, 경로를 나타내는 string 요소들을 가지고 있는 list</li>\n<li>python은 list의 각 경로를 하나하나 확인하면서 해당 경로에 import 하고자 하는 package가 위치해 있는지 확인한다.</li>\n<li>pip을 통해 설치한 외부 module 및 package는 자동으로 site-packages라는 디렉토리에 설치되는데, 이 site-packages는 sys.path에 이미 포함되어 있다.</li>\n<li>current directory라고 하는 현재의 프로젝트 디렉토리는 default로 sys.path에 포함된다.</li>\n</ul>\n<h2 id=\"python은-sys-module의-위치를-어떻게-찾을까\" style=\"position:relative;\"><a href=\"#python%EC%9D%80-sys-module%EC%9D%98-%EC%9C%84%EC%B9%98%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%B0%BE%EC%9D%84%EA%B9%8C\" aria-label=\"python은 sys module의 위치를 어떻게 찾을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python은 sys module의 위치를 어떻게 찾을까?</h2>\n<ul>\n<li>sys도 import 해야하는 module이다.</li>\n<li>\n<p>sys module은 이미 python에서 제공하는 built-in module이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77428452-738cc880-6e1b-11ea-94dc-66296a031c10.png\" alt=\"sys module\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77428457-7687b900-6e1b-11ea-896d-3f53c830a405.png\" alt=\"sys module\"></p>\n</li>\n<li>따라서 import sys 할 때 python은 sys를 built-in modules에서 찾을 수 있다.<br>\n만약 sys가 한번이라도 import 되었다면 sys.modules에서 바로 찾을 수 있다.</li>\n</ul>\n<h4 id=\"built-in-modules에는-뭐가-있는지-알고-싶다면\" style=\"position:relative;\"><a href=\"#built-in-modules%EC%97%90%EB%8A%94-%EB%AD%90%EA%B0%80-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4\" aria-label=\"built in modules에는 뭐가 있는지 알고 싶다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>built-in modules에는 뭐가 있는지 알고 싶다면:</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\nsys<span class=\"token punctuation\">.</span>builtin_module_names</code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77428547-9b7c2c00-6e1b-11ea-8c78-53dcefe0ac36.png\" alt=\"built-in modules\"></p>\n<h4 id=\"module의-위치path를-알고-싶다면\" style=\"position:relative;\"><a href=\"#module%EC%9D%98-%EC%9C%84%EC%B9%98path%EB%A5%BC-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4\" aria-label=\"module의 위치path를 알고 싶다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>module의 위치(path)를 알고 싶다면:</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> inspect\n\ninspect<span class=\"token punctuation\">.</span>getfile<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>modulename<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53142539/77428552-9dde8600-6e1b-11ea-938c-eb1ab246a46a.png\" alt=\"module_path\"></p>\n<h2 id=\"local-package를-import-하는-경로\" style=\"position:relative;\"><a href=\"#local-package%EB%A5%BC-import-%ED%95%98%EB%8A%94-%EA%B2%BD%EB%A1%9C\" aria-label=\"local package를 import 하는 경로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local package를 import 하는 경로</h2>\n<ul>\n<li>built-in module이나 pip을 통해 설치한 외부 module은 일반적으로 import 하는 데 큰 문제가 되지 않는다.</li>\n<li>그러나 직접 개발한 local package를 import 할 때는 해당 package의 위치에 맞게 import 경로를 잘 선언해야 한다.</li>\n</ul>\n<h3 id=\"absolute-path\" style=\"position:relative;\"><a href=\"#absolute-path\" aria-label=\"absolute path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Absolute path</h3>\n<ul>\n<li>경로가 프로젝트의 가장 최상위 디렉토리에서 시작한다.</li>\n<li>일반적으로 사용하는 방식이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\nmy_app.package1.subpackage1.module1.py와 같은 형식인데,\n1) my_app이라는 프로젝트 안에 있으므로 가장 최상위 디렉토리인 my_app은 생략한다.\n2) import를 사용할 때 module의 확장자는 생략한다.\n'''</span>\n\n<span class=\"token keyword\">from</span> package1<span class=\"token punctuation\">.</span>subpackage1<span class=\"token punctuation\">.</span>module1 <span class=\"token keyword\">import</span> function1</code></pre></div>\n<h3 id=\"relative-path\" style=\"position:relative;\"><a href=\"#relative-path\" aria-label=\"relative path permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relative path</h3>\n<ul>\n<li>경로를 import 하는 위치를 기준으로 정의한다.</li>\n<li><code class=\"language-text\">dot(.)</code>; import가 선언되는 파일의 현재 위치<br>\n<code class=\"language-text\">two dots(..)</code>; 현재 위치에서 상위 디렉토리로 가는 경로</li>\n<li>경로가 길어질 수 있는 absolute path의 단점을 보완하기 위해서 사용할 수 있다.<br>\n선언해야 하는 경로의 길이를 줄여준다.</li>\n<li>헷갈리기 쉽고, 파일 위치가 변경되면 경로 위치도 변경되어야 하는 단점이 있다.<br>\n웬만한 경우 absolute path를 사용하는 걸 권장한다.</li>\n<li>일반적으로 local package 안에서 다른 local package를 import 할 때 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#해당 디렉토리에서 찾기</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> class1\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>subpackage1<span class=\"token punctuation\">.</span>module1 <span class=\"token keyword\">import</span> function1</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#상위 디렉토리로 올라가서 찾기</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>module1 <span class=\"token keyword\">import</span> class1</code></pre></div>\n<p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Reference:\n- wecode replit 'Python - How Import Statement Finds Modules &amp; Packages'\n- https://stackoverflow.com/questions/8370206/how-to-get-a-list-of-built-in-modules-in-python\n- https://hashcode.co.kr/questions/476/%EB%AA%A8%EB%93%88%EC%9D%B4-%EC%96%B4%EB%8A%90-%EC%9C%84%EC%B9%98path%EC%97%90-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%95%8C%EC%95%84%EB%82%B4%EA%B3%A0-%EC%8B%B6%EC%8A%B5%EB%8B%88%EB%8B%A4</code></pre></div>","frontmatter":{"title":"[Python] How Import statement finds Modules & Packages","date":"February 11, 2020","category":"python","thumbnail":null}}},"pageContext":{"slug":"/study/import_modules/","previous":{"fields":{"slug":"/study/module_package/"},"frontmatter":{"title":"[Python] Module, Package","category":"python","draft":false}},"next":{"fields":{"slug":"/study/exception_handling/"},"frontmatter":{"title":"[Python] Exception handling: try-except","category":"python","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/endpoint_2/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c46c4ac2-3178-535c-86c0-1b7a7139ac80","excerpt":"프로젝트의 기본 Setting이 끝났다! 틈틈이 runserver를 해보는 습관!! :) LookupError가 뜬다. root_dir/settings.py 에서 admin app을 주석처리 해놓고, root_dir/urls.py에는 admin app 관련 경로가 아직 남아있기 때문이다. 에서 admin 관련 내용을 삭제한다. *이 프로젝트에서는 admin 기능을 사용하지 않기 때문에 삭제하는 것이다. admin 기능이 필요한 곳에서는 아주 유용한 기능 중 하나이다. 이게 없다면 admin…","html":"<p>\n<p>프로젝트의 기본 Setting이 끝났다!<br>\n<strong>틈틈이 runserver를 해보는 습관!! :)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python manage.py runserver</code></pre></div>\n<p>LookupError가 뜬다.</p>\n<p>root_dir/settings.py 에서 admin app을 주석처리 해놓고, root_dir/urls.py에는 admin app 관련 경로가 아직 남아있기 때문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">LookupError: No installed app with label <span class=\"token string\">'admin'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<p><code class=\"language-text\">root_dir/urls.py</code>에서 admin 관련 내용을 삭제한다.</p>\n<p>*이 프로젝트에서는 admin 기능을 사용하지 않기 때문에 삭제하는 것이다. admin 기능이 필요한 곳에서는 아주 유용한 기능 중 하나이다. 이게 없다면 admin 기능을 전부 새로 구현해야하기 때문.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#root_dir/urls.py</span>\n\n<span class=\"token string\">\"\"</span>\"westagram URL Configuration\n\nThe <span class=\"token variable\"><span class=\"token variable\">`</span>urlpatterns<span class=\"token variable\">`</span></span> list routes URLs to views. For <span class=\"token function\">more</span> information please see:\n    https://docs.djangoproject.com/en/3.0/topics/http/urls/\nExamples:\nFunction views\n    <span class=\"token number\">1</span>. Add an import:  from my_app <span class=\"token function\">import</span> views\n    <span class=\"token number\">2</span>. Add a URL to urlpatterns:  path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span>, views.home, <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span>\nClass-based views\n    <span class=\"token number\">1</span>. Add an import:  from other_app.views <span class=\"token function\">import</span> Home\n    <span class=\"token number\">2</span>. Add a URL to urlpatterns:  path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span>, Home.as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span>\nIncluding another URLconf\n    <span class=\"token number\">1</span>. Import the include<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> function: from django.urls <span class=\"token function\">import</span> include, path\n    <span class=\"token number\">2</span>. Add a URL to urlpatterns:  path<span class=\"token punctuation\">(</span><span class=\"token string\">'blog/'</span>, include<span class=\"token punctuation\">(</span><span class=\"token string\">'blog.urls'</span><span class=\"token punctuation\">))</span>\n<span class=\"token string\">\"\"</span>\"\nfrom django.contrib <span class=\"token function\">import</span> admin  <span class=\"token comment\">#삭제</span>\nfrom django.urls <span class=\"token function\">import</span> path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span>, admin.site.urls<span class=\"token punctuation\">)</span>,  <span class=\"token comment\">#삭제</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>runserver를 다시 해보면 잘 작동한다.</p>\n<p>migration 안했다고 나오는 것은 무시해도 된다. 내가 만들지 않은 app들의 이름이 나오는데, django에서 필요한 것들을 생성시킨 것이다. 이것들은 내 model을 만들고 나서 같이 migration 하면 된다.</p>\n<p>runserver를 빠져나오는 방법은 <code class=\"language-text\">ctrl + c</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#python manage.py runserver</span>\n\nWatching <span class=\"token keyword\">for</span> <span class=\"token function\">file</span> changes with StatReloader\nPerforming system checks<span class=\"token punctuation\">..</span>.\n\nSystem check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\n\nYou have <span class=\"token number\">3</span> unapplied migration<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>. Your project may not work properly <span class=\"token keyword\">until</span> you apply the migrations <span class=\"token keyword\">for</span> app<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>: contenttypes, sessions.\nRun <span class=\"token string\">'python manage.py migrate'</span> to apply them.\n\nFebruary 07, <span class=\"token number\">2020</span> - <span class=\"token number\">11</span>:32:50\nDjango version <span class=\"token number\">3.0</span>.3, using settings <span class=\"token string\">'westagram.settings'</span>\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.</code></pre></div>\n<hr>\n<h2 id=\"새-app-만들기\" style=\"position:relative;\"><a href=\"#%EC%83%88-app-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"새 app 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새 APP 만들기</h2>\n<ul>\n<li>root directory와 같은 레벨의 directory로 app을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python manage.py startapp user</code></pre></div>\n<p>***startapp인데 기존에 있는 이름을 똑같이 쓰면 어떻게 되나요?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#tree를 실행해보니 다음과 같이 user app이 잘 생성되었다.</span>\n\n<span class=\"token builtin class-name\">.</span>\n├── db.sqlite3\n├── manage.py     <span class=\"token comment\">#실행 파일</span>\n├── user          <span class=\"token comment\">#새로 생성한 app</span>\n│   ├── admin.py\n│   ├── apps.py\n│   ├── __init__.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tests.py\n│   └── views.py\n└── westagram     <span class=\"token comment\">#root directory. project명과 동일</span>\n    ├── asgi.py\n    ├── __init__.py\n    ├── __pycache__\n    │   ├── __init__.cpython-38.pyc\n    │   ├── settings.cpython-38.pyc\n    │   ├── urls.cpython-38.pyc\n    │   └── wsgi.cpython-38.pyc\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n<span class=\"token number\">4</span> directories, <span class=\"token number\">18</span> files</code></pre></div>\n<h2 id=\"urlspy-복사\" style=\"position:relative;\"><a href=\"#urlspy-%EB%B3%B5%EC%82%AC\" aria-label=\"urlspy 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>urls.py 복사</h2>\n<ul>\n<li>startapp을 했을 때 아쉬운 점이 하나 있다. urls.py가 자동으로 생성이 안 된다.<br>\n따라서 root_directory/urls.py를 app directory 안으로 복사해온다.<br>\n이 과정은 app을 하나 생성하면 무조건 해야하는 기본적인 작업!</li>\n</ul>\n<p>****근데.. 장고가 안하는 데는 이유가 있지 않을까? 앱 중에서 urls.py 필요없는 경우도 있나?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> root_dir/urls.py app/.\n\n<span class=\"token comment\">#tree를 해보면 copy 해온 urls.py가 생겼다.</span>\n\n<span class=\"token builtin class-name\">.</span>\n├── db.sqlite3\n├── manage.py\n├── user\n│   ├── admin.py\n│   ├── apps.py\n│   ├── __init__.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tests.py\n│   ├── urls.py      <span class=\"token comment\">#복사해온 urls.py</span>\n│   └── views.py\n└── westagram\n    ├── asgi.py\n    ├── __init__.py\n    ├── __pycache__\n    │   ├── __init__.cpython-38.pyc\n    │   ├── settings.cpython-38.pyc\n    │   ├── urls.cpython-38.pyc\n    │   └── wsgi.cpython-38.pyc\n    ├── settings.py\n    ├── urls.py     <span class=\"token comment\">#이 원본 urls.py를 app directory로 복사</span>\n    └── wsgi.py\n\n<span class=\"token number\">4</span> directories, <span class=\"token number\">19</span> files</code></pre></div>\n<h2 id=\"settingspy에-app-이름-넣기\" style=\"position:relative;\"><a href=\"#settingspy%EC%97%90-app-%EC%9D%B4%EB%A6%84-%EB%84%A3%EA%B8%B0\" aria-label=\"settingspy에 app 이름 넣기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>settings.py에 app 이름 넣기</h2>\n<ul>\n<li>해당 프로젝트에서 새로 만든 app을 연결시키고 참조할 수 있도록 하기 위한 작업이 필요하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#root_dir/settings.py</span>\n\nINSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">#'django.contrib.admin',</span>\n    <span class=\"token comment\">#'django.contrib.auth',</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span>,\n    <span class=\"token string\">'django.contrib.sessions'</span>,\n    <span class=\"token string\">'django.contrib.messages'</span>,\n    <span class=\"token string\">'django.contrib.staticfiles'</span>,\n    <span class=\"token string\">'user'</span>   <span class=\"token comment\">#새로 추가하는 app의 이름을 하단에 기재</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"[Django] Create Endpoint(2); sign-up, log-in, comments","date":"February 14, 2020","category":"django","thumbnail":null}}},"pageContext":{"slug":"/study/endpoint_2/","previous":{"fields":{"slug":"/study/endpoint_1/"},"frontmatter":{"title":"[Django] Create Endpoint(1); sign-up, log-in, comments","category":"django","draft":false}},"next":{"fields":{"slug":"/study/endpoint_3/"},"frontmatter":{"title":"[Django] Create Endpoint(3); sign-up, log-in, comments","category":"django","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}
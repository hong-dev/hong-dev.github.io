{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/codekata_9/","result":{"data":{"site":{"siteMetadata":{"title":"hong_devlog","author":"hongdev","siteUrl":"https://hong-dev.github.io","comment":{"disqusShortName":"","utterances":"hong-dev/hong-dev.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"202ee9d7-4873-5692-a162-97a78c30c078","excerpt":"My Solution for문을 2번 돌려서, x좌표를 2개씩 찍고 곱하여 면적을 구한다. 가로길이는 2개의 x좌표(index)의 거리 차이로 구한다.\n높이는 물을 담아야 하기 때문에 2개의 높이 중 낮은 높이로 적용한다. Model Solution while문 사용. 점을 두개를 찍어야 하거나, index를 두 개를 동시에 돌릴 때 () while문을 고려해야겠다.","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">숫자의 배열인 height는 y축의 값(높이 값)으로 받는다.\n그래프에 물을 담는다고 생각하고, 물을 담을 수 있는 가장 넓은 면적의 값을 반환하라.</code></pre></div>\n<h2 id=\"my-solution\" style=\"position:relative;\"><a href=\"#my-solution\" aria-label=\"my solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>My Solution</h2>\n<ul>\n<li>for문을 2번 돌려서, x좌표를 2개씩 찍고 곱하여 면적을 구한다.<br>\n가로길이는 2개의 x좌표(index)의 거리 차이로 구한다.\n높이는 물을 담아야 하기 때문에 2개의 높이 중 낮은 높이로 적용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_max_area</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    largest_area <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> index_x1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token keyword\">for</span> index_x2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>index_x1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t        <span class=\"token keyword\">if</span> height<span class=\"token punctuation\">[</span>index_x1<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">[</span>index_x2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t            area <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>index_x1 <span class=\"token operator\">-</span> index_x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> height<span class=\"token punctuation\">[</span>index_x1<span class=\"token punctuation\">]</span>\n\t        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t            area <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>index_x1 <span class=\"token operator\">-</span> index_x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> height<span class=\"token punctuation\">[</span>index_x2<span class=\"token punctuation\">]</span>\n\t       \n\t        largest_area <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>largest_area<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> largest_area</code></pre></div>\n<h2 id=\"model-solution\" style=\"position:relative;\"><a href=\"#model-solution\" aria-label=\"model solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model Solution</h2>\n<ul>\n<li>while문 사용.<br>\n점을 두개를 찍어야 하거나, index를 두 개를 동시에 돌릴 때 (<code class=\"language-text\">이중 for문을 돌려야 할 때</code>) while문을 고려해야겠다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_max_area</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tl <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\tr <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\tarea <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\t<span class=\"token keyword\">while</span> l <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">:</span> \n\t\tarea <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">,</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> height<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> \n\t\t\tl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t    r <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">return</span> area </code></pre></div>\n<br>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Reference:\nwecode codekata replit</code></pre></div>","frontmatter":{"title":"[CodeKata] 9","date":"February 26, 2020","category":"algorithm","thumbnail":null}}},"pageContext":{"slug":"/study/codekata_9/","previous":{"fields":{"slug":"/study/codekata_8/"},"frontmatter":{"title":"[CodeKata] 8","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/zara/crawling/"},"frontmatter":{"title":"Crawling website 접속 차단","category":"error","draft":false}}}},"staticQueryHashes":["2353110810","3128451518"]}